#include "core_gpio.h"  /* For getting GPIO read/write functions */
#include "core_uart_apb.h"
#include "socDefs.h"
#include "hal.h"

#include "Top_Level_hw_platform.h"

#include "cli.h"




void display_help(void){
	uint8_t tx_data[24][40] = {

	      {"\r\nR Read BRT Register  		   "},
	      {"\r\nM Modify  BRT TX Buffer 		   "},
	      {"\r\nD Display BRT  TX/RX Buffer Data"},
	      {"\r\nB Display BC messages        "},
	      {"\r\nX Start BRM BC               "},
	      {"\r\nC Change the BRT Address(Default:0x4 "},
	      {"\r\nN change the BC Data values   "},
	      {"\r\nH Display This Menu        \r\n"}
	 };

	      UART_send(&g_stdio_uart, tx_data[0],sizeof(tx_data));


}

/* Display the Prompt for the User Interaction */

void display_prompt(void) {

	dp_display_text("\r\nCore1553BRT>");


}

/* Decode the Key pressed by the User to select the Apropriate Action */

uint8_t get_key_selection(void)
{

      uint8_t rx_data[2];
      uint8_t rx_size =0;


           do {
               rx_size = UART_get_rx(&g_stdio_uart, &rx_data[1],1);
           }while(rx_size == 0);

           key = rx_data[1];
           //dp_display_text("\n\r Selected fuction is: ");
           UART_send (&g_stdio_uart, &key,sizeof (key));
           return rx_data[1];

    }


/* This function reads the user input such as address and data required for any
 * memory read/write operation
 *
 *  */
		void read_user_input (uint8_t *rx_char_ptr)
		{
		    uint8_t recv_char=0;
		    uint8_t size=0;
		    uint8_t index = 0;
		    for(index = 0; index < 10; index++)
		    {
		    	rx_char[index] = '0';
		    }
		    index = 0;
		    while(recv_char != 13)  //'\n'
		    {
		      size = UART_get_rx(&g_stdio_uart, &recv_char,1);
			  if(size > 0)
			  {

				  rx_char_ptr[index] = recv_char;
				  UART_send (&g_stdio_uart, (uint8_t *)&recv_char,sizeof(recv_char));
				  index++;
				  size = 0; // clear the rcvd flag
			  }
			}

		}

/* Display the contents of BRT Control and Status Registers
 * These are located at offset 0x1f80
 * Total number of registers 32
 */

void display_brt_regs(void){

			 uint32_t  mem_addr,mem_data;
			 //uint32_t   bc_reg[16];
			 uint8   i;
			mem_addr  = CORE1553BRT_0 ;  // base address of BRT instance, 32location from here onwards

			 dp_display_text("\n\r BRT Register Contents\r\n ");
			 for ( i=0; i<= 32 ;i++) {
			   dp_display_text("\r\n");
			   dp_display_value(i,DEC);
			   dp_display_text("\t");
			   dp_display_value(mem_addr,HEX);
			   dp_display_text("\t");
			   mem_data = HW_get_16bit_reg(mem_addr);
			   dp_display_value(mem_data,HEX);
			   mem_addr = mem_addr + 4;
			 }
		 }



/*  Process the User Input Selection and display teh Relevent data */
 *
 * void process_uart_data(uint8_t key)
		   {
			   switch(key)
		       {

				   case 'R' : case 'r':
			   	   {
			   			//print_registers();
			   			display_rt_registers(RT_BASE_ADDR);



			   		break;
			   	   }


				   case 'B':  case 'b':// toggle ENN signal of TMC603A
				   {
					   print_bc_messages();
					   break;
				   }

				   case 'M': case 'm':
					   {

						   while (1) {
						   				   			dp_display_text("Sub Address #(1 to 30): ");
						   				   			rx_char_ptr = rx_char;
						   				   		    read_user_input(rx_char_ptr);
						   				   			 xatoi ( &rx_char_ptr, &user_input);
						   				   			dp_display_value(user_input,HEX);

						   				   			if ((user_input > 0 ) && (user_input < 33))
						   				   		        {
						   				   				last_sub_address   = user_input;
						   				   				change_rt_data(RT_BASE_ADDR ,last_sub_address);
						   				   				 break;

						     				   			    } else {

						     				   			   dp_display_text("\r\n\Invaid input !!!!! Enter the Sub Address # ( 0 to 31)to display Data: ");

						     				   			    }

						   				   		}
						   break;
					   }




				   case 'D': case 'd':
				   		   {

				   		while (1) {
				   			dp_display_text("Sub Address #(1 to 31 ): ");
				   			rx_char_ptr = rx_char;
				   		    read_user_input(rx_char_ptr);
				   			 xatoi ( &rx_char_ptr, &user_input);
				   			dp_display_value(user_input,HEX);

				   			if ((user_input > 0 ) && (user_input < 32))
				   		        {
				   				last_sub_address   = user_input;
				   				print_rt_data(RT_BASE_ADDR ,last_sub_address);
				   				 break;

  				   			    } else {

  				   			   dp_display_text("\r\n\Invaid input !!!!! Enter the Sub Address # ( 0 to 31)to display Data: ");

  				   			    }

				   		}



				   			    break;
				   		   }
				   case 'H': case 'h':
				  	    {

				   		display_help();
                        break;
				  	    }
				   case 'U': case 'u':
				   				  	    {

				   				  	    	 temp = GPIO_get_inputs( &g_gpio );
				   				  	   HW_set_16bit_reg((RT_BASE_ADDR + BRT_TX_SA25),GPIO_get_inputs( &g_gpio ));  ;
				                           break;
				   				  	    }



			   case 'x': case 'X':
									{

										 bc_start_bc ();
										 dp_display_text("\r\n BC Started Communication \r\n ");

									   break;
									}

			   case 'c': case 'C':


			                      {

			                    	  //temp = HW_get_16bit_reg( brt_base_addr + BRT_CONTROL_REG);



												while (1) {
											dp_display_text("\r\n Enter the new RTADDR # ( 1 to 30): ");
											rx_char_ptr = rx_char;
											read_user_input(rx_char_ptr);
											 xatoi ( &rx_char_ptr, &user_input);
											dp_display_value(user_input,HEX);

											if ((user_input > 0 ) && (user_input < 31))
												{
												modify_rt_address(RT_BASE_ADDR,  user_input);
												 break;

												} else {

											   dp_display_text("\r\n\Invaid input !!!!! Enter  Address # ( 1 to 30): ");
											   break;

												}

										}
			   									   break;
			   									}


			   case 'N': case 'n':
			   					   {

			   						   while (1) {
			   						   				   			dp_display_text("\r\n Enter the memory addr  # ( 0x0000 to 0xfffc): ");
			   						   				   			rx_char_ptr = rx_char;
			   						   				   		    read_user_input(rx_char_ptr);
			   						   				   			 xatoi ( &rx_char_ptr, &user_input);
			   						   				   			dp_display_value(user_input,HEX);

			   						   				   			if ((user_input >= 0 ) && (user_input < 0xfffc))
			   						   				   		        {
			   						   				   				last_msg_no   = user_input;
			   						   				   		bc_memory_data(user_input);
			   						   				   		//change_bc_data(last_msg_no);
			   						   				   				//change_rt_data(RT_BASE_ADDR ,last_sub_address);
			   						   				   				 break;

			   						     				   			    } else {

			   						     				   			   //dp_display_text("\r\n\Invaid input !!!! Enter the msg Number # ( 0 to 31)to display Data: ");
			   						     				   			    break;

			   						     				   			    }

			   						   				   		}
			   						   break;
			   					   }


				   default:  /* If selected key is out of range */
				   {

					   break;
				   }
		       }


			   display_prompt();

		   }
 */

