//**********************************************************************
// This code was created by SoC Solutions and is free for use with     *
// Actel products.  For support e-mail support@socsolutions.com.       *
//**********************************************************************
#ifndef BRT_H_
#define BRT_H_

/* All the SA has one word of status word stored fromm 0x0000 to 0x007C  for RX and
 *  0x0F00 to 0xF7C for TX
 * To calculate the location for a particular SA status word location
 *   BRT_RX_STATUS_WRD_BASE + (SA * 4) for RX
 *   BRT_TX_STATUS_WRD_BASE + (SA * 4) for TX
 *   SA0 is for MODE code
 * */
#define BRT_RX_STATUS_WRD_BASE  0x0000
#define BRT_TX_STATUS_WRD_BASE  0x0F00


#define  BRT_RX_BUFF_BASE      0x0080  // SA1 to SA31
#define  BRT_TX_BUFF_BASE      0x1080  // SA1 to SA31
#define  BRT_BUFF_SIZE         128     // each buffer is 32 word length
#define  BRT_BUFF_ADDR_SIZE    32      // for calculating the Address  ( 128/4 = 32)



#define BRT_RX_SA1             0x0080
#define BRT_RX_SA2             0x0100
#define BRT_RX_SA3             0x0180
#define BRT_RX_SA4             0x0200
#define BRT_RX_SA5             0x0280
#define BRT_RX_SA6             0x0300
#define BRT_RX_SA7             0x0380
#define BRT_RX_SA8             0x0400
#define BRT_RX_SA9             0x0480
#define BRT_RX_SA10            0x0500
#define BRT_RX_SA11            0x0580
#define BRT_RX_SA12            0x0600
#define BRT_RX_SA13            0x0680
#define BRT_RX_SA14            0x0700
#define BRT_RX_SA15            0x0780
#define BRT_RX_SA16            0x0800
#define BRT_RX_SA17            0x0880
#define BRT_RX_SA18            0x0900
#define BRT_RX_SA19            0x0980
#define BRT_RX_SA20            0x0A00
#define BRT_RX_SA21            0x0A80
#define BRT_RX_SA22            0x0B00
#define BRT_RX_SA23            0x0B80
#define BRT_RX_SA24            0x0C00
#define BRT_RX_SA25            0x0C80
#define BRT_RX_SA26            0x0D00
#define BRT_RX_SA27            0x0D80
#define BRT_RX_SA28            0x0E00
#define BRT_RX_SA29            0x0E80
#define BRT_RX_SA30            0x0F00



#define BRT_TX_SA1             0x1080
#define BRT_TX_SA2             0x1100
#define BRT_TX_SA3             0x1180
#define BRT_TX_SA4             0x1200
#define BRT_TX_SA5             0x1280
#define BRT_TX_SA6             0x1300
#define BRT_TX_SA7             0x1380
#define BRT_TX_SA8             0x1400
#define BRT_TX_SA9             0x1480
#define BRT_TX_SA10            0x1500
#define BRT_TX_SA11            0x1580
#define BRT_TX_SA12            0x1600
#define BRT_TX_SA13            0x1680
#define BRT_TX_SA14            0x1700
#define BRT_TX_SA15            0x1780

#define BRT_TX_SA16            0x1800
#define BRT_TX_SA17            0x1880
#define BRT_TX_SA18            0x1900
#define BRT_TX_SA19            0x1980
#define BRT_TX_SA20            0x1A00
#define BRT_TX_SA21            0x1A80
#define BRT_TX_SA22            0x1B00
#define BRT_TX_SA23            0x1B80
#define BRT_TX_SA24            0x1C00
#define BRT_TX_SA25            0x1C80
#define BRT_TX_SA26            0x1D00
#define BRT_TX_SA27            0x1D80
#define BRT_TX_SA28            0x1E00
#define BRT_TX_SA29            0x1E80
#define BRT_TX_SA30            0x1F00





#define BRT_CONTROL_REG       0x1F80
#define BRT_INT_REG           0x1F84
#define BRT_VWORD_REG         0x1F88

#define BRT_LEG_REG0          0x1FC0
#define BRT_LEG_REG1          0x1FC4
#define BRT_LEG_REG2          0x1FC8
#define BRT_LEG_REG3          0x1FCC
#define BRT_LEG_REG4          0x1FD0
#define BRT_LEG_REG5          0x1FD4
#define BRT_LEG_REG6          0x1FD8
#define BRT_LEG_REG7          0x1FDC
#define BRT_LEG_REG8          0x1FE0
#define BRT_LEG_REG9          0x1FE4
#define BRT_LEG_REGA          0x1FE8
#define BRT_LEG_REGB          0x1FEC
#define BRT_LEG_REGC          0x1FF0
#define BRT_LEG_REGD          0x1FF4
#define BRT_LEG_REGE          0x1FF8
#define BRT_LEG_REGF          0x1FFC

#define BRT_RTADDR_SOFT_MODE  0x0000








void init_rt_tx_buff(unsigned int  baseAddr , unsigned char subAddr, unsigned short initval  );
void init_rt_rx_buff(unsigned int  baseAddr , unsigned char subAddr, unsigned short initval  );

void brt_init(unsigned int baseAddr);


unsigned short read_status_word_tx ( unsigned int baseAddr, unsigned char subAddr);
unsigned short read_status_word_rx ( unsigned int baseAddr, unsigned char subaddr);

void modify_rt_address(uint32_t brt_base_addr,  uint8_t rtaddr);



#endif /* BRT_H_ */
