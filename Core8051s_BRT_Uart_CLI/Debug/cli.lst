                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.3 #4543 (Dec 31 2006)
                              4 ; This file generated Wed May 04 10:48:17 2016
                              5 ;--------------------------------------------------------
                              6 	.module ___cli
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _last_rt_subaddress
                             13 	.globl _user_input
                             14 	.globl _display_brt_data_PARM_2
                             15 	.globl _temp
                             16 	.globl _last_msg_no
                             17 	.globl _last_sub_address
                             18 	.globl _rx_char_ptr
                             19 	.globl _rx_char
                             20 	.globl _key
                             21 	.globl _display_help
                             22 	.globl _display_prompt
                             23 	.globl _get_key_selection
                             24 	.globl _read_user_input
                             25 	.globl _display_brt_regs
                             26 	.globl _display_brt_data
                             27 	.globl _process_uart_data
                             28 	.globl _display_mem_data
                             29 	.globl _display_brt_sa
                             30 ;--------------------------------------------------------
                             31 ; special function registers
                             32 ;--------------------------------------------------------
                             33 	.area RSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 	.area RSEG    (DATA)
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                    0000     47 Ldisplay_brt_regs$sloc0$1$0==.
   0000                      48 _display_brt_regs_sloc0_1_0:
   0000                      49 	.ds 1
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area OSEG    (OVR,DATA)
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; absolute internal ram data
                             60 ;--------------------------------------------------------
                             61 	.area IABS    (ABS,DATA)
                             62 	.area IABS    (ABS,DATA)
                             63 ;--------------------------------------------------------
                             64 ; bit data
                             65 ;--------------------------------------------------------
                             66 	.area BSEG    (BIT)
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
                    0000     75 G$key$0$0==.
   0000                      76 _key::
   0000                      77 	.ds 1
                    0001     78 G$rx_char$0$0==.
   0001                      79 _rx_char::
   0001                      80 	.ds 10
                    000B     81 G$rx_char_ptr$0$0==.
   000B                      82 _rx_char_ptr::
   000B                      83 	.ds 3
                    000E     84 G$last_sub_address$0$0==.
   000E                      85 _last_sub_address::
   000E                      86 	.ds 1
                    000F     87 G$last_msg_no$0$0==.
   000F                      88 _last_msg_no::
   000F                      89 	.ds 1
                    0010     90 G$temp$0$0==.
   0010                      91 _temp::
   0010                      92 	.ds 1
                    0011     93 Ldisplay_help$tx_data$1$1==.
   0011                      94 _display_help_tx_data_1_1:
   0011                      95 	.ds 960
                    03D1     96 Lget_key_selection$rx_data$1$1==.
   03D1                      97 _get_key_selection_rx_data_1_1:
   03D1                      98 	.ds 2
                    03D3     99 Lread_user_input$rx_char_ptr$1$1==.
   03D3                     100 _read_user_input_rx_char_ptr_1_1:
   03D3                     101 	.ds 3
                    03D6    102 Lread_user_input$recv_char$1$1==.
   03D6                     103 _read_user_input_recv_char_1_1:
   03D6                     104 	.ds 1
                    03D7    105 Lread_user_input$index$1$1==.
   03D7                     106 _read_user_input_index_1_1:
   03D7                     107 	.ds 1
                    03D8    108 Ldisplay_brt_regs$mem_addr$1$1==.
   03D8                     109 _display_brt_regs_mem_addr_1_1:
   03D8                     110 	.ds 4
                    03DC    111 Ldisplay_brt_regs$i$1$1==.
   03DC                     112 _display_brt_regs_i_1_1:
   03DC                     113 	.ds 1
                    03DD    114 Ldisplay_brt_data$subaddr$1$1==.
   03DD                     115 _display_brt_data_PARM_2:
   03DD                     116 	.ds 1
                    03DE    117 Ldisplay_brt_data$brt_baseaddr$1$1==.
   03DE                     118 _display_brt_data_brt_baseaddr_1_1:
   03DE                     119 	.ds 4
                    03E2    120 Ldisplay_brt_data$tx_sub_address$1$1==.
   03E2                     121 _display_brt_data_tx_sub_address_1_1:
   03E2                     122 	.ds 2
                    03E4    123 Ldisplay_brt_data$rx_sub_address$1$1==.
   03E4                     124 _display_brt_data_rx_sub_address_1_1:
   03E4                     125 	.ds 2
                    03E6    126 Ldisplay_brt_data$i$1$1==.
   03E6                     127 _display_brt_data_i_1_1:
   03E6                     128 	.ds 1
                    03E7    129 Ldisplay_brt_data$m$1$1==.
   03E7                     130 _display_brt_data_m_1_1:
   03E7                     131 	.ds 1
                    03E8    132 Lprocess_uart_data$key$1$1==.
   03E8                     133 _process_uart_data_key_1_1:
   03E8                     134 	.ds 1
                    03E9    135 Ldisplay_mem_data$mem_data$1$1==.
   03E9                     136 _display_mem_data_mem_data_1_1:
   03E9                     137 	.ds 2
                    03EB    138 Ldisplay_mem_data$tx_sub_address$1$1==.
   03EB                     139 _display_mem_data_tx_sub_address_1_1:
   03EB                     140 	.ds 2
                    03ED    141 Ldisplay_mem_data$rx_sub_address$1$1==.
   03ED                     142 _display_mem_data_rx_sub_address_1_1:
   03ED                     143 	.ds 2
                    03EF    144 Ldisplay_mem_data$i$1$1==.
   03EF                     145 _display_mem_data_i_1_1:
   03EF                     146 	.ds 1
                    03F0    147 Ldisplay_mem_data$m$1$1==.
   03F0                     148 _display_mem_data_m_1_1:
   03F0                     149 	.ds 1
                    03F1    150 Ldisplay_brt_sa$subaddr$1$1==.
   03F1                     151 _display_brt_sa_subaddr_1_1:
   03F1                     152 	.ds 1
                            153 ;--------------------------------------------------------
                            154 ; external initialized ram data
                            155 ;--------------------------------------------------------
                            156 	.area XISEG   (XDATA)
                    0000    157 G$user_input$0$0==.
   0000                     158 _user_input::
   0000                     159 	.ds 4
                    0004    160 G$last_rt_subaddress$0$0==.
   0004                     161 _last_rt_subaddress::
   0004                     162 	.ds 1
                            163 	.area HOME    (CODE)
                            164 	.area GSINIT0 (CODE)
                            165 	.area GSINIT1 (CODE)
                            166 	.area GSINIT2 (CODE)
                            167 	.area GSINIT3 (CODE)
                            168 	.area GSINIT4 (CODE)
                            169 	.area GSINIT5 (CODE)
                            170 	.area GSINIT  (CODE)
                            171 	.area GSFINAL (CODE)
                            172 	.area CSEG    (CODE)
                            173 ;--------------------------------------------------------
                            174 ; global & static initialisations
                            175 ;--------------------------------------------------------
                            176 	.area HOME    (CODE)
                            177 	.area GSINIT  (CODE)
                            178 	.area GSFINAL (CODE)
                            179 	.area GSINIT  (CODE)
                            180 ;--------------------------------------------------------
                            181 ; Home
                            182 ;--------------------------------------------------------
                            183 	.area HOME    (CODE)
                            184 	.area HOME    (CODE)
                            185 ;--------------------------------------------------------
                            186 ; code
                            187 ;--------------------------------------------------------
                            188 	.area CSEG    (CODE)
                            189 ;------------------------------------------------------------
                            190 ;Allocation info for local variables in function 'display_help'
                            191 ;------------------------------------------------------------
                            192 ;tx_data                   Allocated with name '_display_help_tx_data_1_1'
                            193 ;------------------------------------------------------------
                    0000    194 	G$display_help$0$0 ==.
                    0000    195 	C$cli.c$20$0$0 ==.
                            196 ;	../cli.c:20: void display_help(void){
                            197 ;	-----------------------------------------
                            198 ;	 function display_help
                            199 ;	-----------------------------------------
   0000                     200 _display_help:
                    0002    201 	ar2 = 0x02
                    0003    202 	ar3 = 0x03
                    0004    203 	ar4 = 0x04
                    0005    204 	ar5 = 0x05
                    0006    205 	ar6 = 0x06
                    0007    206 	ar7 = 0x07
                    0000    207 	ar0 = 0x00
                    0001    208 	ar1 = 0x01
                    0000    209 	C$cli.c$21$1$0 ==.
                            210 ;	../cli.c:21: uint8_t tx_data[24][40] = {
                            211 ;	genPointerSet
                            212 ;     genFarPointerSet
   0000 90s00r11            213 	mov	dptr,#_display_help_tx_data_1_1
   0003 74 0D               214 	mov	a,#0x0D
   0005 F0                  215 	movx	@dptr,a
                            216 ;	genPointerSet
                            217 ;     genFarPointerSet
   0006 90s00r12            218 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0001)
   0009 74 0A               219 	mov	a,#0x0A
   000B F0                  220 	movx	@dptr,a
                            221 ;	genPointerSet
                            222 ;     genFarPointerSet
   000C 90s00r13            223 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0002)
   000F 74 52               224 	mov	a,#0x52
   0011 F0                  225 	movx	@dptr,a
                            226 ;	genPointerSet
                            227 ;     genFarPointerSet
   0012 90s00r14            228 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0003)
   0015 74 20               229 	mov	a,#0x20
   0017 F0                  230 	movx	@dptr,a
                            231 ;	genPointerSet
                            232 ;     genFarPointerSet
   0018 90s00r15            233 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0004)
   001B 74 52               234 	mov	a,#0x52
   001D F0                  235 	movx	@dptr,a
                            236 ;	genPointerSet
                            237 ;     genFarPointerSet
   001E 90s00r16            238 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0005)
   0021 74 65               239 	mov	a,#0x65
   0023 F0                  240 	movx	@dptr,a
                            241 ;	genPointerSet
                            242 ;     genFarPointerSet
   0024 90s00r17            243 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0006)
   0027 74 61               244 	mov	a,#0x61
   0029 F0                  245 	movx	@dptr,a
                            246 ;	genPointerSet
                            247 ;     genFarPointerSet
   002A 90s00r18            248 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0007)
   002D 74 64               249 	mov	a,#0x64
   002F F0                  250 	movx	@dptr,a
                            251 ;	genPointerSet
                            252 ;     genFarPointerSet
   0030 90s00r19            253 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0008)
   0033 74 20               254 	mov	a,#0x20
   0035 F0                  255 	movx	@dptr,a
                            256 ;	genPointerSet
                            257 ;     genFarPointerSet
   0036 90s00r1A            258 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0009)
   0039 74 42               259 	mov	a,#0x42
   003B F0                  260 	movx	@dptr,a
                            261 ;	genPointerSet
                            262 ;     genFarPointerSet
   003C 90s00r1B            263 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000a)
   003F 74 52               264 	mov	a,#0x52
   0041 F0                  265 	movx	@dptr,a
                            266 ;	genPointerSet
                            267 ;     genFarPointerSet
   0042 90s00r1C            268 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000b)
   0045 74 54               269 	mov	a,#0x54
   0047 F0                  270 	movx	@dptr,a
                            271 ;	genPointerSet
                            272 ;     genFarPointerSet
   0048 90s00r1D            273 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000c)
   004B 74 20               274 	mov	a,#0x20
   004D F0                  275 	movx	@dptr,a
                            276 ;	genPointerSet
                            277 ;     genFarPointerSet
   004E 90s00r1E            278 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000d)
   0051 74 52               279 	mov	a,#0x52
   0053 F0                  280 	movx	@dptr,a
                            281 ;	genPointerSet
                            282 ;     genFarPointerSet
   0054 90s00r1F            283 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000e)
   0057 74 65               284 	mov	a,#0x65
   0059 F0                  285 	movx	@dptr,a
                            286 ;	genPointerSet
                            287 ;     genFarPointerSet
   005A 90s00r20            288 	mov	dptr,#(_display_help_tx_data_1_1 + 0x000f)
   005D 74 67               289 	mov	a,#0x67
   005F F0                  290 	movx	@dptr,a
                            291 ;	genPointerSet
                            292 ;     genFarPointerSet
   0060 90s00r21            293 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0010)
   0063 74 69               294 	mov	a,#0x69
   0065 F0                  295 	movx	@dptr,a
                            296 ;	genPointerSet
                            297 ;     genFarPointerSet
   0066 90s00r22            298 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0011)
   0069 74 73               299 	mov	a,#0x73
   006B F0                  300 	movx	@dptr,a
                            301 ;	genPointerSet
                            302 ;     genFarPointerSet
   006C 90s00r23            303 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0012)
   006F 74 74               304 	mov	a,#0x74
   0071 F0                  305 	movx	@dptr,a
                            306 ;	genPointerSet
                            307 ;     genFarPointerSet
   0072 90s00r24            308 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0013)
   0075 74 65               309 	mov	a,#0x65
   0077 F0                  310 	movx	@dptr,a
                            311 ;	genPointerSet
                            312 ;     genFarPointerSet
   0078 90s00r25            313 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0014)
   007B 74 72               314 	mov	a,#0x72
   007D F0                  315 	movx	@dptr,a
                            316 ;	genPointerSet
                            317 ;     genFarPointerSet
   007E 90s00r26            318 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0015)
   0081 74 20               319 	mov	a,#0x20
   0083 F0                  320 	movx	@dptr,a
                            321 ;	genPointerSet
                            322 ;     genFarPointerSet
   0084 90s00r27            323 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0016)
   0087 74 20               324 	mov	a,#0x20
   0089 F0                  325 	movx	@dptr,a
                            326 ;	genPointerSet
                            327 ;     genFarPointerSet
   008A 90s00r28            328 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0017)
   008D 74 09               329 	mov	a,#0x09
   008F F0                  330 	movx	@dptr,a
                            331 ;	genPointerSet
                            332 ;     genFarPointerSet
   0090 90s00r29            333 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0018)
   0093 74 09               334 	mov	a,#0x09
   0095 F0                  335 	movx	@dptr,a
                            336 ;	genPointerSet
                            337 ;     genFarPointerSet
   0096 90s00r2A            338 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0019)
   0099 74 20               339 	mov	a,#0x20
   009B F0                  340 	movx	@dptr,a
                            341 ;	genPointerSet
                            342 ;     genFarPointerSet
   009C 90s00r2B            343 	mov	dptr,#(_display_help_tx_data_1_1 + 0x001a)
   009F 74 20               344 	mov	a,#0x20
   00A1 F0                  345 	movx	@dptr,a
                            346 ;	genPointerSet
                            347 ;     genFarPointerSet
   00A2 90s00r2C            348 	mov	dptr,#(_display_help_tx_data_1_1 + 0x001b)
   00A5 74 20               349 	mov	a,#0x20
   00A7 F0                  350 	movx	@dptr,a
                            351 ;	genPointerSet
                            352 ;     genFarPointerSet
   00A8 90s00r2D            353 	mov	dptr,#(_display_help_tx_data_1_1 + 0x001c)
   00AB 74 00               354 	mov	a,#0x00
   00AD F0                  355 	movx	@dptr,a
                            356 ;	genPointerSet
                            357 ;     genFarPointerSet
   00AE 90s00r39            358 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0028)
   00B1 74 0D               359 	mov	a,#0x0D
   00B3 F0                  360 	movx	@dptr,a
                            361 ;	genPointerSet
                            362 ;     genFarPointerSet
   00B4 90s00r3A            363 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0029)
   00B7 74 0A               364 	mov	a,#0x0A
   00B9 F0                  365 	movx	@dptr,a
                            366 ;	genPointerSet
                            367 ;     genFarPointerSet
   00BA 90s00r3B            368 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002a)
   00BD 74 4D               369 	mov	a,#0x4D
   00BF F0                  370 	movx	@dptr,a
                            371 ;	genPointerSet
                            372 ;     genFarPointerSet
   00C0 90s00r3C            373 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002b)
   00C3 74 20               374 	mov	a,#0x20
   00C5 F0                  375 	movx	@dptr,a
                            376 ;	genPointerSet
                            377 ;     genFarPointerSet
   00C6 90s00r3D            378 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002c)
   00C9 74 4D               379 	mov	a,#0x4D
   00CB F0                  380 	movx	@dptr,a
                            381 ;	genPointerSet
                            382 ;     genFarPointerSet
   00CC 90s00r3E            383 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002d)
   00CF 74 6F               384 	mov	a,#0x6F
   00D1 F0                  385 	movx	@dptr,a
                            386 ;	genPointerSet
                            387 ;     genFarPointerSet
   00D2 90s00r3F            388 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002e)
   00D5 74 64               389 	mov	a,#0x64
   00D7 F0                  390 	movx	@dptr,a
                            391 ;	genPointerSet
                            392 ;     genFarPointerSet
   00D8 90s00r40            393 	mov	dptr,#(_display_help_tx_data_1_1 + 0x002f)
   00DB 74 69               394 	mov	a,#0x69
   00DD F0                  395 	movx	@dptr,a
                            396 ;	genPointerSet
                            397 ;     genFarPointerSet
   00DE 90s00r41            398 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0030)
   00E1 74 66               399 	mov	a,#0x66
   00E3 F0                  400 	movx	@dptr,a
                            401 ;	genPointerSet
                            402 ;     genFarPointerSet
   00E4 90s00r42            403 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0031)
   00E7 74 79               404 	mov	a,#0x79
   00E9 F0                  405 	movx	@dptr,a
                            406 ;	genPointerSet
                            407 ;     genFarPointerSet
   00EA 90s00r43            408 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0032)
   00ED 74 20               409 	mov	a,#0x20
   00EF F0                  410 	movx	@dptr,a
                            411 ;	genPointerSet
                            412 ;     genFarPointerSet
   00F0 90s00r44            413 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0033)
   00F3 74 20               414 	mov	a,#0x20
   00F5 F0                  415 	movx	@dptr,a
                            416 ;	genPointerSet
                            417 ;     genFarPointerSet
   00F6 90s00r45            418 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0034)
   00F9 74 42               419 	mov	a,#0x42
   00FB F0                  420 	movx	@dptr,a
                            421 ;	genPointerSet
                            422 ;     genFarPointerSet
   00FC 90s00r46            423 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0035)
   00FF 74 52               424 	mov	a,#0x52
   0101 F0                  425 	movx	@dptr,a
                            426 ;	genPointerSet
                            427 ;     genFarPointerSet
   0102 90s00r47            428 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0036)
   0105 74 54               429 	mov	a,#0x54
   0107 F0                  430 	movx	@dptr,a
                            431 ;	genPointerSet
                            432 ;     genFarPointerSet
   0108 90s00r48            433 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0037)
   010B 74 20               434 	mov	a,#0x20
   010D F0                  435 	movx	@dptr,a
                            436 ;	genPointerSet
                            437 ;     genFarPointerSet
   010E 90s00r49            438 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0038)
   0111 74 54               439 	mov	a,#0x54
   0113 F0                  440 	movx	@dptr,a
                            441 ;	genPointerSet
                            442 ;     genFarPointerSet
   0114 90s00r4A            443 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0039)
   0117 74 58               444 	mov	a,#0x58
   0119 F0                  445 	movx	@dptr,a
                            446 ;	genPointerSet
                            447 ;     genFarPointerSet
   011A 90s00r4B            448 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003a)
   011D 74 20               449 	mov	a,#0x20
   011F F0                  450 	movx	@dptr,a
                            451 ;	genPointerSet
                            452 ;     genFarPointerSet
   0120 90s00r4C            453 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003b)
   0123 74 42               454 	mov	a,#0x42
   0125 F0                  455 	movx	@dptr,a
                            456 ;	genPointerSet
                            457 ;     genFarPointerSet
   0126 90s00r4D            458 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003c)
   0129 74 75               459 	mov	a,#0x75
   012B F0                  460 	movx	@dptr,a
                            461 ;	genPointerSet
                            462 ;     genFarPointerSet
   012C 90s00r4E            463 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003d)
   012F 74 66               464 	mov	a,#0x66
   0131 F0                  465 	movx	@dptr,a
                            466 ;	genPointerSet
                            467 ;     genFarPointerSet
   0132 90s00r4F            468 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003e)
   0135 74 66               469 	mov	a,#0x66
   0137 F0                  470 	movx	@dptr,a
                            471 ;	genPointerSet
                            472 ;     genFarPointerSet
   0138 90s00r50            473 	mov	dptr,#(_display_help_tx_data_1_1 + 0x003f)
   013B 74 65               474 	mov	a,#0x65
   013D F0                  475 	movx	@dptr,a
                            476 ;	genPointerSet
                            477 ;     genFarPointerSet
   013E 90s00r51            478 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0040)
   0141 74 72               479 	mov	a,#0x72
   0143 F0                  480 	movx	@dptr,a
                            481 ;	genPointerSet
                            482 ;     genFarPointerSet
   0144 90s00r52            483 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0041)
   0147 74 20               484 	mov	a,#0x20
   0149 F0                  485 	movx	@dptr,a
                            486 ;	genPointerSet
                            487 ;     genFarPointerSet
   014A 90s00r53            488 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0042)
   014D 74 09               489 	mov	a,#0x09
   014F F0                  490 	movx	@dptr,a
                            491 ;	genPointerSet
                            492 ;     genFarPointerSet
   0150 90s00r54            493 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0043)
   0153 74 09               494 	mov	a,#0x09
   0155 F0                  495 	movx	@dptr,a
                            496 ;	genPointerSet
                            497 ;     genFarPointerSet
   0156 90s00r55            498 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0044)
   0159 74 20               499 	mov	a,#0x20
   015B F0                  500 	movx	@dptr,a
                            501 ;	genPointerSet
                            502 ;     genFarPointerSet
   015C 90s00r56            503 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0045)
   015F 74 20               504 	mov	a,#0x20
   0161 F0                  505 	movx	@dptr,a
                            506 ;	genPointerSet
                            507 ;     genFarPointerSet
   0162 90s00r57            508 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0046)
   0165 74 20               509 	mov	a,#0x20
   0167 F0                  510 	movx	@dptr,a
                            511 ;	genPointerSet
                            512 ;     genFarPointerSet
   0168 90s00r58            513 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0047)
   016B 74 00               514 	mov	a,#0x00
   016D F0                  515 	movx	@dptr,a
                            516 ;	genPointerSet
                            517 ;     genFarPointerSet
   016E 90s00r61            518 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0050)
   0171 74 0D               519 	mov	a,#0x0D
   0173 F0                  520 	movx	@dptr,a
                            521 ;	genPointerSet
                            522 ;     genFarPointerSet
   0174 90s00r62            523 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0051)
   0177 74 0A               524 	mov	a,#0x0A
   0179 F0                  525 	movx	@dptr,a
                            526 ;	genPointerSet
                            527 ;     genFarPointerSet
   017A 90s00r63            528 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0052)
   017D 74 44               529 	mov	a,#0x44
   017F F0                  530 	movx	@dptr,a
                            531 ;	genPointerSet
                            532 ;     genFarPointerSet
   0180 90s00r64            533 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0053)
   0183 74 20               534 	mov	a,#0x20
   0185 F0                  535 	movx	@dptr,a
                            536 ;	genPointerSet
                            537 ;     genFarPointerSet
   0186 90s00r65            538 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0054)
   0189 74 44               539 	mov	a,#0x44
   018B F0                  540 	movx	@dptr,a
                            541 ;	genPointerSet
                            542 ;     genFarPointerSet
   018C 90s00r66            543 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0055)
   018F 74 69               544 	mov	a,#0x69
   0191 F0                  545 	movx	@dptr,a
                            546 ;	genPointerSet
                            547 ;     genFarPointerSet
   0192 90s00r67            548 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0056)
   0195 74 73               549 	mov	a,#0x73
   0197 F0                  550 	movx	@dptr,a
                            551 ;	genPointerSet
                            552 ;     genFarPointerSet
   0198 90s00r68            553 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0057)
   019B 74 70               554 	mov	a,#0x70
   019D F0                  555 	movx	@dptr,a
                            556 ;	genPointerSet
                            557 ;     genFarPointerSet
   019E 90s00r69            558 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0058)
   01A1 74 6C               559 	mov	a,#0x6C
   01A3 F0                  560 	movx	@dptr,a
                            561 ;	genPointerSet
                            562 ;     genFarPointerSet
   01A4 90s00r6A            563 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0059)
   01A7 74 61               564 	mov	a,#0x61
   01A9 F0                  565 	movx	@dptr,a
                            566 ;	genPointerSet
                            567 ;     genFarPointerSet
   01AA 90s00r6B            568 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005a)
   01AD 74 79               569 	mov	a,#0x79
   01AF F0                  570 	movx	@dptr,a
                            571 ;	genPointerSet
                            572 ;     genFarPointerSet
   01B0 90s00r6C            573 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005b)
   01B3 74 20               574 	mov	a,#0x20
   01B5 F0                  575 	movx	@dptr,a
                            576 ;	genPointerSet
                            577 ;     genFarPointerSet
   01B6 90s00r6D            578 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005c)
   01B9 74 42               579 	mov	a,#0x42
   01BB F0                  580 	movx	@dptr,a
                            581 ;	genPointerSet
                            582 ;     genFarPointerSet
   01BC 90s00r6E            583 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005d)
   01BF 74 52               584 	mov	a,#0x52
   01C1 F0                  585 	movx	@dptr,a
                            586 ;	genPointerSet
                            587 ;     genFarPointerSet
   01C2 90s00r6F            588 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005e)
   01C5 74 54               589 	mov	a,#0x54
   01C7 F0                  590 	movx	@dptr,a
                            591 ;	genPointerSet
                            592 ;     genFarPointerSet
   01C8 90s00r70            593 	mov	dptr,#(_display_help_tx_data_1_1 + 0x005f)
   01CB 74 20               594 	mov	a,#0x20
   01CD F0                  595 	movx	@dptr,a
                            596 ;	genPointerSet
                            597 ;     genFarPointerSet
   01CE 90s00r71            598 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0060)
   01D1 74 20               599 	mov	a,#0x20
   01D3 F0                  600 	movx	@dptr,a
                            601 ;	genPointerSet
                            602 ;     genFarPointerSet
   01D4 90s00r72            603 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0061)
   01D7 74 54               604 	mov	a,#0x54
   01D9 F0                  605 	movx	@dptr,a
                            606 ;	genPointerSet
                            607 ;     genFarPointerSet
   01DA 90s00r73            608 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0062)
   01DD 74 58               609 	mov	a,#0x58
   01DF F0                  610 	movx	@dptr,a
                            611 ;	genPointerSet
                            612 ;     genFarPointerSet
   01E0 90s00r74            613 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0063)
   01E3 74 2F               614 	mov	a,#0x2F
   01E5 F0                  615 	movx	@dptr,a
                            616 ;	genPointerSet
                            617 ;     genFarPointerSet
   01E6 90s00r75            618 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0064)
   01E9 74 52               619 	mov	a,#0x52
   01EB F0                  620 	movx	@dptr,a
                            621 ;	genPointerSet
                            622 ;     genFarPointerSet
   01EC 90s00r76            623 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0065)
   01EF 74 58               624 	mov	a,#0x58
   01F1 F0                  625 	movx	@dptr,a
                            626 ;	genPointerSet
                            627 ;     genFarPointerSet
   01F2 90s00r77            628 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0066)
   01F5 74 20               629 	mov	a,#0x20
   01F7 F0                  630 	movx	@dptr,a
                            631 ;	genPointerSet
                            632 ;     genFarPointerSet
   01F8 90s00r78            633 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0067)
   01FB 74 42               634 	mov	a,#0x42
   01FD F0                  635 	movx	@dptr,a
                            636 ;	genPointerSet
                            637 ;     genFarPointerSet
   01FE 90s00r79            638 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0068)
   0201 74 75               639 	mov	a,#0x75
   0203 F0                  640 	movx	@dptr,a
                            641 ;	genPointerSet
                            642 ;     genFarPointerSet
   0204 90s00r7A            643 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0069)
   0207 74 66               644 	mov	a,#0x66
   0209 F0                  645 	movx	@dptr,a
                            646 ;	genPointerSet
                            647 ;     genFarPointerSet
   020A 90s00r7B            648 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006a)
   020D 74 66               649 	mov	a,#0x66
   020F F0                  650 	movx	@dptr,a
                            651 ;	genPointerSet
                            652 ;     genFarPointerSet
   0210 90s00r7C            653 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006b)
   0213 74 65               654 	mov	a,#0x65
   0215 F0                  655 	movx	@dptr,a
                            656 ;	genPointerSet
                            657 ;     genFarPointerSet
   0216 90s00r7D            658 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006c)
   0219 74 72               659 	mov	a,#0x72
   021B F0                  660 	movx	@dptr,a
                            661 ;	genPointerSet
                            662 ;     genFarPointerSet
   021C 90s00r7E            663 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006d)
   021F 74 20               664 	mov	a,#0x20
   0221 F0                  665 	movx	@dptr,a
                            666 ;	genPointerSet
                            667 ;     genFarPointerSet
   0222 90s00r7F            668 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006e)
   0225 74 44               669 	mov	a,#0x44
   0227 F0                  670 	movx	@dptr,a
                            671 ;	genPointerSet
                            672 ;     genFarPointerSet
   0228 90s00r80            673 	mov	dptr,#(_display_help_tx_data_1_1 + 0x006f)
   022B 74 61               674 	mov	a,#0x61
   022D F0                  675 	movx	@dptr,a
                            676 ;	genPointerSet
                            677 ;     genFarPointerSet
   022E 90s00r81            678 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0070)
   0231 74 74               679 	mov	a,#0x74
   0233 F0                  680 	movx	@dptr,a
                            681 ;	genPointerSet
                            682 ;     genFarPointerSet
   0234 90s00r82            683 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0071)
   0237 74 61               684 	mov	a,#0x61
   0239 F0                  685 	movx	@dptr,a
                            686 ;	genPointerSet
                            687 ;     genFarPointerSet
   023A 90s00r83            688 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0072)
   023D 74 00               689 	mov	a,#0x00
   023F F0                  690 	movx	@dptr,a
                            691 ;	genPointerSet
                            692 ;     genFarPointerSet
   0240 90s00r89            693 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0078)
   0243 74 0D               694 	mov	a,#0x0D
   0245 F0                  695 	movx	@dptr,a
                            696 ;	genPointerSet
                            697 ;     genFarPointerSet
   0246 90s00r8A            698 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0079)
   0249 74 0A               699 	mov	a,#0x0A
   024B F0                  700 	movx	@dptr,a
                            701 ;	genPointerSet
                            702 ;     genFarPointerSet
   024C 90s00r8B            703 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007a)
   024F 74 42               704 	mov	a,#0x42
   0251 F0                  705 	movx	@dptr,a
                            706 ;	genPointerSet
                            707 ;     genFarPointerSet
   0252 90s00r8C            708 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007b)
   0255 74 20               709 	mov	a,#0x20
   0257 F0                  710 	movx	@dptr,a
                            711 ;	genPointerSet
                            712 ;     genFarPointerSet
   0258 90s00r8D            713 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007c)
   025B 74 44               714 	mov	a,#0x44
   025D F0                  715 	movx	@dptr,a
                            716 ;	genPointerSet
                            717 ;     genFarPointerSet
   025E 90s00r8E            718 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007d)
   0261 74 69               719 	mov	a,#0x69
   0263 F0                  720 	movx	@dptr,a
                            721 ;	genPointerSet
                            722 ;     genFarPointerSet
   0264 90s00r8F            723 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007e)
   0267 74 73               724 	mov	a,#0x73
   0269 F0                  725 	movx	@dptr,a
                            726 ;	genPointerSet
                            727 ;     genFarPointerSet
   026A 90s00r90            728 	mov	dptr,#(_display_help_tx_data_1_1 + 0x007f)
   026D 74 70               729 	mov	a,#0x70
   026F F0                  730 	movx	@dptr,a
                            731 ;	genPointerSet
                            732 ;     genFarPointerSet
   0270 90s00r91            733 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0080)
   0273 74 6C               734 	mov	a,#0x6C
   0275 F0                  735 	movx	@dptr,a
                            736 ;	genPointerSet
                            737 ;     genFarPointerSet
   0276 90s00r92            738 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0081)
   0279 74 61               739 	mov	a,#0x61
   027B F0                  740 	movx	@dptr,a
                            741 ;	genPointerSet
                            742 ;     genFarPointerSet
   027C 90s00r93            743 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0082)
   027F 74 79               744 	mov	a,#0x79
   0281 F0                  745 	movx	@dptr,a
                            746 ;	genPointerSet
                            747 ;     genFarPointerSet
   0282 90s00r94            748 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0083)
   0285 74 20               749 	mov	a,#0x20
   0287 F0                  750 	movx	@dptr,a
                            751 ;	genPointerSet
                            752 ;     genFarPointerSet
   0288 90s00r95            753 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0084)
   028B 74 42               754 	mov	a,#0x42
   028D F0                  755 	movx	@dptr,a
                            756 ;	genPointerSet
                            757 ;     genFarPointerSet
   028E 90s00r96            758 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0085)
   0291 74 43               759 	mov	a,#0x43
   0293 F0                  760 	movx	@dptr,a
                            761 ;	genPointerSet
                            762 ;     genFarPointerSet
   0294 90s00r97            763 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0086)
   0297 74 20               764 	mov	a,#0x20
   0299 F0                  765 	movx	@dptr,a
                            766 ;	genPointerSet
                            767 ;     genFarPointerSet
   029A 90s00r98            768 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0087)
   029D 74 6D               769 	mov	a,#0x6D
   029F F0                  770 	movx	@dptr,a
                            771 ;	genPointerSet
                            772 ;     genFarPointerSet
   02A0 90s00r99            773 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0088)
   02A3 74 65               774 	mov	a,#0x65
   02A5 F0                  775 	movx	@dptr,a
                            776 ;	genPointerSet
                            777 ;     genFarPointerSet
   02A6 90s00r9A            778 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0089)
   02A9 74 73               779 	mov	a,#0x73
   02AB F0                  780 	movx	@dptr,a
                            781 ;	genPointerSet
                            782 ;     genFarPointerSet
   02AC 90s00r9B            783 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008a)
   02AF 74 73               784 	mov	a,#0x73
   02B1 F0                  785 	movx	@dptr,a
                            786 ;	genPointerSet
                            787 ;     genFarPointerSet
   02B2 90s00r9C            788 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008b)
   02B5 74 61               789 	mov	a,#0x61
   02B7 F0                  790 	movx	@dptr,a
                            791 ;	genPointerSet
                            792 ;     genFarPointerSet
   02B8 90s00r9D            793 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008c)
   02BB 74 67               794 	mov	a,#0x67
   02BD F0                  795 	movx	@dptr,a
                            796 ;	genPointerSet
                            797 ;     genFarPointerSet
   02BE 90s00r9E            798 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008d)
   02C1 74 65               799 	mov	a,#0x65
   02C3 F0                  800 	movx	@dptr,a
                            801 ;	genPointerSet
                            802 ;     genFarPointerSet
   02C4 90s00r9F            803 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008e)
   02C7 74 73               804 	mov	a,#0x73
   02C9 F0                  805 	movx	@dptr,a
                            806 ;	genPointerSet
                            807 ;     genFarPointerSet
   02CA 90s00rA0            808 	mov	dptr,#(_display_help_tx_data_1_1 + 0x008f)
   02CD 74 20               809 	mov	a,#0x20
   02CF F0                  810 	movx	@dptr,a
                            811 ;	genPointerSet
                            812 ;     genFarPointerSet
   02D0 90s00rA1            813 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0090)
   02D3 74 20               814 	mov	a,#0x20
   02D5 F0                  815 	movx	@dptr,a
                            816 ;	genPointerSet
                            817 ;     genFarPointerSet
   02D6 90s00rA2            818 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0091)
   02D9 74 20               819 	mov	a,#0x20
   02DB F0                  820 	movx	@dptr,a
                            821 ;	genPointerSet
                            822 ;     genFarPointerSet
   02DC 90s00rA3            823 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0092)
   02DF 74 20               824 	mov	a,#0x20
   02E1 F0                  825 	movx	@dptr,a
                            826 ;	genPointerSet
                            827 ;     genFarPointerSet
   02E2 90s00rA4            828 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0093)
   02E5 74 20               829 	mov	a,#0x20
   02E7 F0                  830 	movx	@dptr,a
                            831 ;	genPointerSet
                            832 ;     genFarPointerSet
   02E8 90s00rA5            833 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0094)
   02EB 74 20               834 	mov	a,#0x20
   02ED F0                  835 	movx	@dptr,a
                            836 ;	genPointerSet
                            837 ;     genFarPointerSet
   02EE 90s00rA6            838 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0095)
   02F1 74 20               839 	mov	a,#0x20
   02F3 F0                  840 	movx	@dptr,a
                            841 ;	genPointerSet
                            842 ;     genFarPointerSet
   02F4 90s00rA7            843 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0096)
   02F7 74 20               844 	mov	a,#0x20
   02F9 F0                  845 	movx	@dptr,a
                            846 ;	genPointerSet
                            847 ;     genFarPointerSet
   02FA 90s00rA8            848 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0097)
   02FD 74 00               849 	mov	a,#0x00
   02FF F0                  850 	movx	@dptr,a
                            851 ;	genPointerSet
                            852 ;     genFarPointerSet
   0300 90s00rB1            853 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a0)
   0303 74 0D               854 	mov	a,#0x0D
   0305 F0                  855 	movx	@dptr,a
                            856 ;	genPointerSet
                            857 ;     genFarPointerSet
   0306 90s00rB2            858 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a1)
   0309 74 0A               859 	mov	a,#0x0A
   030B F0                  860 	movx	@dptr,a
                            861 ;	genPointerSet
                            862 ;     genFarPointerSet
   030C 90s00rB3            863 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a2)
   030F 74 58               864 	mov	a,#0x58
   0311 F0                  865 	movx	@dptr,a
                            866 ;	genPointerSet
                            867 ;     genFarPointerSet
   0312 90s00rB4            868 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a3)
   0315 74 20               869 	mov	a,#0x20
   0317 F0                  870 	movx	@dptr,a
                            871 ;	genPointerSet
                            872 ;     genFarPointerSet
   0318 90s00rB5            873 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a4)
   031B 74 53               874 	mov	a,#0x53
   031D F0                  875 	movx	@dptr,a
                            876 ;	genPointerSet
                            877 ;     genFarPointerSet
   031E 90s00rB6            878 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a5)
   0321 74 74               879 	mov	a,#0x74
   0323 F0                  880 	movx	@dptr,a
                            881 ;	genPointerSet
                            882 ;     genFarPointerSet
   0324 90s00rB7            883 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a6)
   0327 74 61               884 	mov	a,#0x61
   0329 F0                  885 	movx	@dptr,a
                            886 ;	genPointerSet
                            887 ;     genFarPointerSet
   032A 90s00rB8            888 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a7)
   032D 74 72               889 	mov	a,#0x72
   032F F0                  890 	movx	@dptr,a
                            891 ;	genPointerSet
                            892 ;     genFarPointerSet
   0330 90s00rB9            893 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a8)
   0333 74 74               894 	mov	a,#0x74
   0335 F0                  895 	movx	@dptr,a
                            896 ;	genPointerSet
                            897 ;     genFarPointerSet
   0336 90s00rBA            898 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00a9)
   0339 74 20               899 	mov	a,#0x20
   033B F0                  900 	movx	@dptr,a
                            901 ;	genPointerSet
                            902 ;     genFarPointerSet
   033C 90s00rBB            903 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00aa)
   033F 74 42               904 	mov	a,#0x42
   0341 F0                  905 	movx	@dptr,a
                            906 ;	genPointerSet
                            907 ;     genFarPointerSet
   0342 90s00rBC            908 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ab)
   0345 74 52               909 	mov	a,#0x52
   0347 F0                  910 	movx	@dptr,a
                            911 ;	genPointerSet
                            912 ;     genFarPointerSet
   0348 90s00rBD            913 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ac)
   034B 74 4D               914 	mov	a,#0x4D
   034D F0                  915 	movx	@dptr,a
                            916 ;	genPointerSet
                            917 ;     genFarPointerSet
   034E 90s00rBE            918 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ad)
   0351 74 20               919 	mov	a,#0x20
   0353 F0                  920 	movx	@dptr,a
                            921 ;	genPointerSet
                            922 ;     genFarPointerSet
   0354 90s00rBF            923 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ae)
   0357 74 42               924 	mov	a,#0x42
   0359 F0                  925 	movx	@dptr,a
                            926 ;	genPointerSet
                            927 ;     genFarPointerSet
   035A 90s00rC0            928 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00af)
   035D 74 43               929 	mov	a,#0x43
   035F F0                  930 	movx	@dptr,a
                            931 ;	genPointerSet
                            932 ;     genFarPointerSet
   0360 90s00rC1            933 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b0)
   0363 74 20               934 	mov	a,#0x20
   0365 F0                  935 	movx	@dptr,a
                            936 ;	genPointerSet
                            937 ;     genFarPointerSet
   0366 90s00rC2            938 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b1)
   0369 74 20               939 	mov	a,#0x20
   036B F0                  940 	movx	@dptr,a
                            941 ;	genPointerSet
                            942 ;     genFarPointerSet
   036C 90s00rC3            943 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b2)
   036F 74 20               944 	mov	a,#0x20
   0371 F0                  945 	movx	@dptr,a
                            946 ;	genPointerSet
                            947 ;     genFarPointerSet
   0372 90s00rC4            948 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b3)
   0375 74 20               949 	mov	a,#0x20
   0377 F0                  950 	movx	@dptr,a
                            951 ;	genPointerSet
                            952 ;     genFarPointerSet
   0378 90s00rC5            953 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b4)
   037B 74 20               954 	mov	a,#0x20
   037D F0                  955 	movx	@dptr,a
                            956 ;	genPointerSet
                            957 ;     genFarPointerSet
   037E 90s00rC6            958 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b5)
   0381 74 20               959 	mov	a,#0x20
   0383 F0                  960 	movx	@dptr,a
                            961 ;	genPointerSet
                            962 ;     genFarPointerSet
   0384 90s00rC7            963 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b6)
   0387 74 20               964 	mov	a,#0x20
   0389 F0                  965 	movx	@dptr,a
                            966 ;	genPointerSet
                            967 ;     genFarPointerSet
   038A 90s00rC8            968 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b7)
   038D 74 20               969 	mov	a,#0x20
   038F F0                  970 	movx	@dptr,a
                            971 ;	genPointerSet
                            972 ;     genFarPointerSet
   0390 90s00rC9            973 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b8)
   0393 74 20               974 	mov	a,#0x20
   0395 F0                  975 	movx	@dptr,a
                            976 ;	genPointerSet
                            977 ;     genFarPointerSet
   0396 90s00rCA            978 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00b9)
   0399 74 20               979 	mov	a,#0x20
   039B F0                  980 	movx	@dptr,a
                            981 ;	genPointerSet
                            982 ;     genFarPointerSet
   039C 90s00rCB            983 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ba)
   039F 74 20               984 	mov	a,#0x20
   03A1 F0                  985 	movx	@dptr,a
                            986 ;	genPointerSet
                            987 ;     genFarPointerSet
   03A2 90s00rCC            988 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00bb)
   03A5 74 20               989 	mov	a,#0x20
   03A7 F0                  990 	movx	@dptr,a
                            991 ;	genPointerSet
                            992 ;     genFarPointerSet
   03A8 90s00rCD            993 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00bc)
   03AB 74 20               994 	mov	a,#0x20
   03AD F0                  995 	movx	@dptr,a
                            996 ;	genPointerSet
                            997 ;     genFarPointerSet
   03AE 90s00rCE            998 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00bd)
   03B1 74 20               999 	mov	a,#0x20
   03B3 F0                 1000 	movx	@dptr,a
                           1001 ;	genPointerSet
                           1002 ;     genFarPointerSet
   03B4 90s00rCF           1003 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00be)
   03B7 74 20              1004 	mov	a,#0x20
   03B9 F0                 1005 	movx	@dptr,a
                           1006 ;	genPointerSet
                           1007 ;     genFarPointerSet
   03BA 90s00rD0           1008 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00bf)
   03BD 74 00              1009 	mov	a,#0x00
   03BF F0                 1010 	movx	@dptr,a
                           1011 ;	genPointerSet
                           1012 ;     genFarPointerSet
   03C0 90s00rD9           1013 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00c8)
   03C3 74 0D              1014 	mov	a,#0x0D
   03C5 F0                 1015 	movx	@dptr,a
                           1016 ;	genPointerSet
                           1017 ;     genFarPointerSet
   03C6 90s00rDA           1018 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00c9)
   03C9 74 0A              1019 	mov	a,#0x0A
   03CB F0                 1020 	movx	@dptr,a
                           1021 ;	genPointerSet
                           1022 ;     genFarPointerSet
   03CC 90s00rDB           1023 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ca)
   03CF 74 43              1024 	mov	a,#0x43
   03D1 F0                 1025 	movx	@dptr,a
                           1026 ;	genPointerSet
                           1027 ;     genFarPointerSet
   03D2 90s00rDC           1028 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00cb)
   03D5 74 20              1029 	mov	a,#0x20
   03D7 F0                 1030 	movx	@dptr,a
                           1031 ;	genPointerSet
                           1032 ;     genFarPointerSet
   03D8 90s00rDD           1033 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00cc)
   03DB 74 43              1034 	mov	a,#0x43
   03DD F0                 1035 	movx	@dptr,a
                           1036 ;	genPointerSet
                           1037 ;     genFarPointerSet
   03DE 90s00rDE           1038 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00cd)
   03E1 74 68              1039 	mov	a,#0x68
   03E3 F0                 1040 	movx	@dptr,a
                           1041 ;	genPointerSet
                           1042 ;     genFarPointerSet
   03E4 90s00rDF           1043 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ce)
   03E7 74 61              1044 	mov	a,#0x61
   03E9 F0                 1045 	movx	@dptr,a
                           1046 ;	genPointerSet
                           1047 ;     genFarPointerSet
   03EA 90s00rE0           1048 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00cf)
   03ED 74 6E              1049 	mov	a,#0x6E
   03EF F0                 1050 	movx	@dptr,a
                           1051 ;	genPointerSet
                           1052 ;     genFarPointerSet
   03F0 90s00rE1           1053 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d0)
   03F3 74 67              1054 	mov	a,#0x67
   03F5 F0                 1055 	movx	@dptr,a
                           1056 ;	genPointerSet
                           1057 ;     genFarPointerSet
   03F6 90s00rE2           1058 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d1)
   03F9 74 65              1059 	mov	a,#0x65
   03FB F0                 1060 	movx	@dptr,a
                           1061 ;	genPointerSet
                           1062 ;     genFarPointerSet
   03FC 90s00rE3           1063 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d2)
   03FF 74 20              1064 	mov	a,#0x20
   0401 F0                 1065 	movx	@dptr,a
                           1066 ;	genPointerSet
                           1067 ;     genFarPointerSet
   0402 90s00rE4           1068 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d3)
   0405 74 74              1069 	mov	a,#0x74
   0407 F0                 1070 	movx	@dptr,a
                           1071 ;	genPointerSet
                           1072 ;     genFarPointerSet
   0408 90s00rE5           1073 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d4)
   040B 74 68              1074 	mov	a,#0x68
   040D F0                 1075 	movx	@dptr,a
                           1076 ;	genPointerSet
                           1077 ;     genFarPointerSet
   040E 90s00rE6           1078 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d5)
   0411 74 65              1079 	mov	a,#0x65
   0413 F0                 1080 	movx	@dptr,a
                           1081 ;	genPointerSet
                           1082 ;     genFarPointerSet
   0414 90s00rE7           1083 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d6)
   0417 74 20              1084 	mov	a,#0x20
   0419 F0                 1085 	movx	@dptr,a
                           1086 ;	genPointerSet
                           1087 ;     genFarPointerSet
   041A 90s00rE8           1088 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d7)
   041D 74 42              1089 	mov	a,#0x42
   041F F0                 1090 	movx	@dptr,a
                           1091 ;	genPointerSet
                           1092 ;     genFarPointerSet
   0420 90s00rE9           1093 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d8)
   0423 74 52              1094 	mov	a,#0x52
   0425 F0                 1095 	movx	@dptr,a
                           1096 ;	genPointerSet
                           1097 ;     genFarPointerSet
   0426 90s00rEA           1098 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00d9)
   0429 74 54              1099 	mov	a,#0x54
   042B F0                 1100 	movx	@dptr,a
                           1101 ;	genPointerSet
                           1102 ;     genFarPointerSet
   042C 90s00rEB           1103 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00da)
   042F 74 20              1104 	mov	a,#0x20
   0431 F0                 1105 	movx	@dptr,a
                           1106 ;	genPointerSet
                           1107 ;     genFarPointerSet
   0432 90s00rEC           1108 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00db)
   0435 74 41              1109 	mov	a,#0x41
   0437 F0                 1110 	movx	@dptr,a
                           1111 ;	genPointerSet
                           1112 ;     genFarPointerSet
   0438 90s00rED           1113 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00dc)
   043B 74 64              1114 	mov	a,#0x64
   043D F0                 1115 	movx	@dptr,a
                           1116 ;	genPointerSet
                           1117 ;     genFarPointerSet
   043E 90s00rEE           1118 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00dd)
   0441 74 64              1119 	mov	a,#0x64
   0443 F0                 1120 	movx	@dptr,a
                           1121 ;	genPointerSet
                           1122 ;     genFarPointerSet
   0444 90s00rEF           1123 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00de)
   0447 74 72              1124 	mov	a,#0x72
   0449 F0                 1125 	movx	@dptr,a
                           1126 ;	genPointerSet
                           1127 ;     genFarPointerSet
   044A 90s00rF0           1128 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00df)
   044D 74 65              1129 	mov	a,#0x65
   044F F0                 1130 	movx	@dptr,a
                           1131 ;	genPointerSet
                           1132 ;     genFarPointerSet
   0450 90s00rF1           1133 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e0)
   0453 74 73              1134 	mov	a,#0x73
   0455 F0                 1135 	movx	@dptr,a
                           1136 ;	genPointerSet
                           1137 ;     genFarPointerSet
   0456 90s00rF2           1138 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e1)
   0459 74 73              1139 	mov	a,#0x73
   045B F0                 1140 	movx	@dptr,a
                           1141 ;	genPointerSet
                           1142 ;     genFarPointerSet
   045C 90s00rF3           1143 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e2)
   045F 74 28              1144 	mov	a,#0x28
   0461 F0                 1145 	movx	@dptr,a
                           1146 ;	genPointerSet
                           1147 ;     genFarPointerSet
   0462 90s00rF4           1148 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e3)
   0465 74 44              1149 	mov	a,#0x44
   0467 F0                 1150 	movx	@dptr,a
                           1151 ;	genPointerSet
                           1152 ;     genFarPointerSet
   0468 90s00rF5           1153 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e4)
   046B 74 65              1154 	mov	a,#0x65
   046D F0                 1155 	movx	@dptr,a
                           1156 ;	genPointerSet
                           1157 ;     genFarPointerSet
   046E 90s00rF6           1158 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e5)
   0471 74 66              1159 	mov	a,#0x66
   0473 F0                 1160 	movx	@dptr,a
                           1161 ;	genPointerSet
                           1162 ;     genFarPointerSet
   0474 90s00rF7           1163 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e6)
   0477 74 61              1164 	mov	a,#0x61
   0479 F0                 1165 	movx	@dptr,a
                           1166 ;	genPointerSet
                           1167 ;     genFarPointerSet
   047A 90s00rF8           1168 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e7)
   047D 74 75              1169 	mov	a,#0x75
   047F F0                 1170 	movx	@dptr,a
                           1171 ;	genPointerSet
                           1172 ;     genFarPointerSet
   0480 90s00rF9           1173 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e8)
   0483 74 6C              1174 	mov	a,#0x6C
   0485 F0                 1175 	movx	@dptr,a
                           1176 ;	genPointerSet
                           1177 ;     genFarPointerSet
   0486 90s00rFA           1178 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00e9)
   0489 74 74              1179 	mov	a,#0x74
   048B F0                 1180 	movx	@dptr,a
                           1181 ;	genPointerSet
                           1182 ;     genFarPointerSet
   048C 90s00rFB           1183 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ea)
   048F 74 3A              1184 	mov	a,#0x3A
   0491 F0                 1185 	movx	@dptr,a
                           1186 ;	genPointerSet
                           1187 ;     genFarPointerSet
   0492 90s00rFC           1188 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00eb)
   0495 74 30              1189 	mov	a,#0x30
   0497 F0                 1190 	movx	@dptr,a
                           1191 ;	genPointerSet
                           1192 ;     genFarPointerSet
   0498 90s00rFD           1193 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ec)
   049B 74 78              1194 	mov	a,#0x78
   049D F0                 1195 	movx	@dptr,a
                           1196 ;	genPointerSet
                           1197 ;     genFarPointerSet
   049E 90s00rFE           1198 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ed)
   04A1 74 34              1199 	mov	a,#0x34
   04A3 F0                 1200 	movx	@dptr,a
                           1201 ;	genPointerSet
                           1202 ;     genFarPointerSet
   04A4 90s00rFF           1203 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ee)
   04A7 74 20              1204 	mov	a,#0x20
   04A9 F0                 1205 	movx	@dptr,a
                           1206 ;	genPointerSet
                           1207 ;     genFarPointerSet
   04AA 90s01r00           1208 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ef)
   04AD 74 00              1209 	mov	a,#0x00
   04AF F0                 1210 	movx	@dptr,a
                           1211 ;	genPointerSet
                           1212 ;     genFarPointerSet
   04B0 90s01r01           1213 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f0)
   04B3 74 0D              1214 	mov	a,#0x0D
   04B5 F0                 1215 	movx	@dptr,a
                           1216 ;	genPointerSet
                           1217 ;     genFarPointerSet
   04B6 90s01r02           1218 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f1)
   04B9 74 0A              1219 	mov	a,#0x0A
   04BB F0                 1220 	movx	@dptr,a
                           1221 ;	genPointerSet
                           1222 ;     genFarPointerSet
   04BC 90s01r03           1223 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f2)
   04BF 74 4E              1224 	mov	a,#0x4E
   04C1 F0                 1225 	movx	@dptr,a
                           1226 ;	genPointerSet
                           1227 ;     genFarPointerSet
   04C2 90s01r04           1228 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f3)
   04C5 74 20              1229 	mov	a,#0x20
   04C7 F0                 1230 	movx	@dptr,a
                           1231 ;	genPointerSet
                           1232 ;     genFarPointerSet
   04C8 90s01r05           1233 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f4)
   04CB 74 63              1234 	mov	a,#0x63
   04CD F0                 1235 	movx	@dptr,a
                           1236 ;	genPointerSet
                           1237 ;     genFarPointerSet
   04CE 90s01r06           1238 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f5)
   04D1 74 68              1239 	mov	a,#0x68
   04D3 F0                 1240 	movx	@dptr,a
                           1241 ;	genPointerSet
                           1242 ;     genFarPointerSet
   04D4 90s01r07           1243 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f6)
   04D7 74 61              1244 	mov	a,#0x61
   04D9 F0                 1245 	movx	@dptr,a
                           1246 ;	genPointerSet
                           1247 ;     genFarPointerSet
   04DA 90s01r08           1248 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f7)
   04DD 74 6E              1249 	mov	a,#0x6E
   04DF F0                 1250 	movx	@dptr,a
                           1251 ;	genPointerSet
                           1252 ;     genFarPointerSet
   04E0 90s01r09           1253 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f8)
   04E3 74 67              1254 	mov	a,#0x67
   04E5 F0                 1255 	movx	@dptr,a
                           1256 ;	genPointerSet
                           1257 ;     genFarPointerSet
   04E6 90s01r0A           1258 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00f9)
   04E9 74 65              1259 	mov	a,#0x65
   04EB F0                 1260 	movx	@dptr,a
                           1261 ;	genPointerSet
                           1262 ;     genFarPointerSet
   04EC 90s01r0B           1263 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00fa)
   04EF 74 20              1264 	mov	a,#0x20
   04F1 F0                 1265 	movx	@dptr,a
                           1266 ;	genPointerSet
                           1267 ;     genFarPointerSet
   04F2 90s01r0C           1268 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00fb)
   04F5 74 74              1269 	mov	a,#0x74
   04F7 F0                 1270 	movx	@dptr,a
                           1271 ;	genPointerSet
                           1272 ;     genFarPointerSet
   04F8 90s01r0D           1273 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00fc)
   04FB 74 68              1274 	mov	a,#0x68
   04FD F0                 1275 	movx	@dptr,a
                           1276 ;	genPointerSet
                           1277 ;     genFarPointerSet
   04FE 90s01r0E           1278 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00fd)
   0501 74 65              1279 	mov	a,#0x65
   0503 F0                 1280 	movx	@dptr,a
                           1281 ;	genPointerSet
                           1282 ;     genFarPointerSet
   0504 90s01r0F           1283 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00fe)
   0507 74 20              1284 	mov	a,#0x20
   0509 F0                 1285 	movx	@dptr,a
                           1286 ;	genPointerSet
                           1287 ;     genFarPointerSet
   050A 90s01r10           1288 	mov	dptr,#(_display_help_tx_data_1_1 + 0x00ff)
   050D 74 42              1289 	mov	a,#0x42
   050F F0                 1290 	movx	@dptr,a
                           1291 ;	genPointerSet
                           1292 ;     genFarPointerSet
   0510 90s01r11           1293 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0100)
   0513 74 43              1294 	mov	a,#0x43
   0515 F0                 1295 	movx	@dptr,a
                           1296 ;	genPointerSet
                           1297 ;     genFarPointerSet
   0516 90s01r12           1298 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0101)
   0519 74 20              1299 	mov	a,#0x20
   051B F0                 1300 	movx	@dptr,a
                           1301 ;	genPointerSet
                           1302 ;     genFarPointerSet
   051C 90s01r13           1303 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0102)
   051F 74 44              1304 	mov	a,#0x44
   0521 F0                 1305 	movx	@dptr,a
                           1306 ;	genPointerSet
                           1307 ;     genFarPointerSet
   0522 90s01r14           1308 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0103)
   0525 74 61              1309 	mov	a,#0x61
   0527 F0                 1310 	movx	@dptr,a
                           1311 ;	genPointerSet
                           1312 ;     genFarPointerSet
   0528 90s01r15           1313 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0104)
   052B 74 74              1314 	mov	a,#0x74
   052D F0                 1315 	movx	@dptr,a
                           1316 ;	genPointerSet
                           1317 ;     genFarPointerSet
   052E 90s01r16           1318 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0105)
   0531 74 61              1319 	mov	a,#0x61
   0533 F0                 1320 	movx	@dptr,a
                           1321 ;	genPointerSet
                           1322 ;     genFarPointerSet
   0534 90s01r17           1323 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0106)
   0537 74 20              1324 	mov	a,#0x20
   0539 F0                 1325 	movx	@dptr,a
                           1326 ;	genPointerSet
                           1327 ;     genFarPointerSet
   053A 90s01r18           1328 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0107)
   053D 74 76              1329 	mov	a,#0x76
   053F F0                 1330 	movx	@dptr,a
                           1331 ;	genPointerSet
                           1332 ;     genFarPointerSet
   0540 90s01r19           1333 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0108)
   0543 74 61              1334 	mov	a,#0x61
   0545 F0                 1335 	movx	@dptr,a
                           1336 ;	genPointerSet
                           1337 ;     genFarPointerSet
   0546 90s01r1A           1338 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0109)
   0549 74 6C              1339 	mov	a,#0x6C
   054B F0                 1340 	movx	@dptr,a
                           1341 ;	genPointerSet
                           1342 ;     genFarPointerSet
   054C 90s01r1B           1343 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010a)
   054F 74 75              1344 	mov	a,#0x75
   0551 F0                 1345 	movx	@dptr,a
                           1346 ;	genPointerSet
                           1347 ;     genFarPointerSet
   0552 90s01r1C           1348 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010b)
   0555 74 65              1349 	mov	a,#0x65
   0557 F0                 1350 	movx	@dptr,a
                           1351 ;	genPointerSet
                           1352 ;     genFarPointerSet
   0558 90s01r1D           1353 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010c)
   055B 74 73              1354 	mov	a,#0x73
   055D F0                 1355 	movx	@dptr,a
                           1356 ;	genPointerSet
                           1357 ;     genFarPointerSet
   055E 90s01r1E           1358 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010d)
   0561 74 20              1359 	mov	a,#0x20
   0563 F0                 1360 	movx	@dptr,a
                           1361 ;	genPointerSet
                           1362 ;     genFarPointerSet
   0564 90s01r1F           1363 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010e)
   0567 74 20              1364 	mov	a,#0x20
   0569 F0                 1365 	movx	@dptr,a
                           1366 ;	genPointerSet
                           1367 ;     genFarPointerSet
   056A 90s01r20           1368 	mov	dptr,#(_display_help_tx_data_1_1 + 0x010f)
   056D 74 20              1369 	mov	a,#0x20
   056F F0                 1370 	movx	@dptr,a
                           1371 ;	genPointerSet
                           1372 ;     genFarPointerSet
   0570 90s01r21           1373 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0110)
   0573 74 00              1374 	mov	a,#0x00
   0575 F0                 1375 	movx	@dptr,a
                           1376 ;	genPointerSet
                           1377 ;     genFarPointerSet
   0576 90s01r29           1378 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0118)
   0579 74 0D              1379 	mov	a,#0x0D
   057B F0                 1380 	movx	@dptr,a
                           1381 ;	genPointerSet
                           1382 ;     genFarPointerSet
   057C 90s01r2A           1383 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0119)
   057F 74 0A              1384 	mov	a,#0x0A
   0581 F0                 1385 	movx	@dptr,a
                           1386 ;	genPointerSet
                           1387 ;     genFarPointerSet
   0582 90s01r2B           1388 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011a)
   0585 74 48              1389 	mov	a,#0x48
   0587 F0                 1390 	movx	@dptr,a
                           1391 ;	genPointerSet
                           1392 ;     genFarPointerSet
   0588 90s01r2C           1393 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011b)
   058B 74 20              1394 	mov	a,#0x20
   058D F0                 1395 	movx	@dptr,a
                           1396 ;	genPointerSet
                           1397 ;     genFarPointerSet
   058E 90s01r2D           1398 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011c)
   0591 74 44              1399 	mov	a,#0x44
   0593 F0                 1400 	movx	@dptr,a
                           1401 ;	genPointerSet
                           1402 ;     genFarPointerSet
   0594 90s01r2E           1403 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011d)
   0597 74 69              1404 	mov	a,#0x69
   0599 F0                 1405 	movx	@dptr,a
                           1406 ;	genPointerSet
                           1407 ;     genFarPointerSet
   059A 90s01r2F           1408 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011e)
   059D 74 73              1409 	mov	a,#0x73
   059F F0                 1410 	movx	@dptr,a
                           1411 ;	genPointerSet
                           1412 ;     genFarPointerSet
   05A0 90s01r30           1413 	mov	dptr,#(_display_help_tx_data_1_1 + 0x011f)
   05A3 74 70              1414 	mov	a,#0x70
   05A5 F0                 1415 	movx	@dptr,a
                           1416 ;	genPointerSet
                           1417 ;     genFarPointerSet
   05A6 90s01r31           1418 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0120)
   05A9 74 6C              1419 	mov	a,#0x6C
   05AB F0                 1420 	movx	@dptr,a
                           1421 ;	genPointerSet
                           1422 ;     genFarPointerSet
   05AC 90s01r32           1423 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0121)
   05AF 74 61              1424 	mov	a,#0x61
   05B1 F0                 1425 	movx	@dptr,a
                           1426 ;	genPointerSet
                           1427 ;     genFarPointerSet
   05B2 90s01r33           1428 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0122)
   05B5 74 79              1429 	mov	a,#0x79
   05B7 F0                 1430 	movx	@dptr,a
                           1431 ;	genPointerSet
                           1432 ;     genFarPointerSet
   05B8 90s01r34           1433 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0123)
   05BB 74 20              1434 	mov	a,#0x20
   05BD F0                 1435 	movx	@dptr,a
                           1436 ;	genPointerSet
                           1437 ;     genFarPointerSet
   05BE 90s01r35           1438 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0124)
   05C1 74 54              1439 	mov	a,#0x54
   05C3 F0                 1440 	movx	@dptr,a
                           1441 ;	genPointerSet
                           1442 ;     genFarPointerSet
   05C4 90s01r36           1443 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0125)
   05C7 74 68              1444 	mov	a,#0x68
   05C9 F0                 1445 	movx	@dptr,a
                           1446 ;	genPointerSet
                           1447 ;     genFarPointerSet
   05CA 90s01r37           1448 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0126)
   05CD 74 69              1449 	mov	a,#0x69
   05CF F0                 1450 	movx	@dptr,a
                           1451 ;	genPointerSet
                           1452 ;     genFarPointerSet
   05D0 90s01r38           1453 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0127)
   05D3 74 73              1454 	mov	a,#0x73
   05D5 F0                 1455 	movx	@dptr,a
                           1456 ;	genPointerSet
                           1457 ;     genFarPointerSet
   05D6 90s01r39           1458 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0128)
   05D9 74 20              1459 	mov	a,#0x20
   05DB F0                 1460 	movx	@dptr,a
                           1461 ;	genPointerSet
                           1462 ;     genFarPointerSet
   05DC 90s01r3A           1463 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0129)
   05DF 74 4D              1464 	mov	a,#0x4D
   05E1 F0                 1465 	movx	@dptr,a
                           1466 ;	genPointerSet
                           1467 ;     genFarPointerSet
   05E2 90s01r3B           1468 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012a)
   05E5 74 65              1469 	mov	a,#0x65
   05E7 F0                 1470 	movx	@dptr,a
                           1471 ;	genPointerSet
                           1472 ;     genFarPointerSet
   05E8 90s01r3C           1473 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012b)
   05EB 74 6E              1474 	mov	a,#0x6E
   05ED F0                 1475 	movx	@dptr,a
                           1476 ;	genPointerSet
                           1477 ;     genFarPointerSet
   05EE 90s01r3D           1478 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012c)
   05F1 74 75              1479 	mov	a,#0x75
   05F3 F0                 1480 	movx	@dptr,a
                           1481 ;	genPointerSet
                           1482 ;     genFarPointerSet
   05F4 90s01r3E           1483 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012d)
   05F7 74 20              1484 	mov	a,#0x20
   05F9 F0                 1485 	movx	@dptr,a
                           1486 ;	genPointerSet
                           1487 ;     genFarPointerSet
   05FA 90s01r3F           1488 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012e)
   05FD 74 20              1489 	mov	a,#0x20
   05FF F0                 1490 	movx	@dptr,a
                           1491 ;	genPointerSet
                           1492 ;     genFarPointerSet
   0600 90s01r40           1493 	mov	dptr,#(_display_help_tx_data_1_1 + 0x012f)
   0603 74 20              1494 	mov	a,#0x20
   0605 F0                 1495 	movx	@dptr,a
                           1496 ;	genPointerSet
                           1497 ;     genFarPointerSet
   0606 90s01r41           1498 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0130)
   0609 74 20              1499 	mov	a,#0x20
   060B F0                 1500 	movx	@dptr,a
                           1501 ;	genPointerSet
                           1502 ;     genFarPointerSet
   060C 90s01r42           1503 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0131)
   060F 74 20              1504 	mov	a,#0x20
   0611 F0                 1505 	movx	@dptr,a
                           1506 ;	genPointerSet
                           1507 ;     genFarPointerSet
   0612 90s01r43           1508 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0132)
   0615 74 20              1509 	mov	a,#0x20
   0617 F0                 1510 	movx	@dptr,a
                           1511 ;	genPointerSet
                           1512 ;     genFarPointerSet
   0618 90s01r44           1513 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0133)
   061B 74 20              1514 	mov	a,#0x20
   061D F0                 1515 	movx	@dptr,a
                           1516 ;	genPointerSet
                           1517 ;     genFarPointerSet
   061E 90s01r45           1518 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0134)
   0621 74 20              1519 	mov	a,#0x20
   0623 F0                 1520 	movx	@dptr,a
                           1521 ;	genPointerSet
                           1522 ;     genFarPointerSet
   0624 90s01r46           1523 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0135)
   0627 74 0D              1524 	mov	a,#0x0D
   0629 F0                 1525 	movx	@dptr,a
                           1526 ;	genPointerSet
                           1527 ;     genFarPointerSet
   062A 90s01r47           1528 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0136)
   062D 74 0A              1529 	mov	a,#0x0A
   062F F0                 1530 	movx	@dptr,a
                           1531 ;	genPointerSet
                           1532 ;     genFarPointerSet
   0630 90s01r48           1533 	mov	dptr,#(_display_help_tx_data_1_1 + 0x0137)
   0633 74 00              1534 	mov	a,#0x00
   0635 F0                 1535 	movx	@dptr,a
                    0636   1536 	C$cli.c$33$1$1 ==.
                           1537 ;	../cli.c:33: UART_send(&g_stdio_uart, tx_data[0],sizeof(tx_data));
                           1538 ;	genCast
   0636 90s00r00           1539 	mov	dptr,#_UART_send_PARM_2
   0639 74r11              1540 	mov	a,#_display_help_tx_data_1_1
   063B F0                 1541 	movx	@dptr,a
   063C A3                 1542 	inc	dptr
   063D 74s00              1543 	mov	a,#(_display_help_tx_data_1_1 >> 8)
   063F F0                 1544 	movx	@dptr,a
   0640 A3                 1545 	inc	dptr
   0641 74 00              1546 	mov	a,#0x0
   0643 F0                 1547 	movx	@dptr,a
                           1548 ;	genAssign
   0644 90s00r00           1549 	mov	dptr,#_UART_send_PARM_3
   0647 74 C0              1550 	mov	a,#0xC0
   0649 F0                 1551 	movx	@dptr,a
   064A A3                 1552 	inc	dptr
   064B 74 03              1553 	mov	a,#0x03
   064D F0                 1554 	movx	@dptr,a
                           1555 ;	genCall
   064E 75 82r00           1556 	mov	dpl,#_g_stdio_uart
   0651 75 83s00           1557 	mov	dph,#(_g_stdio_uart >> 8)
   0654 75 F0 00           1558 	mov	b,#0x00
   0657 12s00r00           1559 	lcall	_UART_send
   065A                    1560 00101$:
                    065A   1561 	C$cli.c$36$1$1 ==.
                    065A   1562 	XG$display_help$0$0 ==.
   065A 22                 1563 	ret
                           1564 ;------------------------------------------------------------
                           1565 ;Allocation info for local variables in function 'display_prompt'
                           1566 ;------------------------------------------------------------
                           1567 ;------------------------------------------------------------
                    065B   1568 	G$display_prompt$0$0 ==.
                    065B   1569 	C$cli.c$40$1$1 ==.
                           1570 ;	../cli.c:40: void display_prompt(void) {
                           1571 ;	-----------------------------------------
                           1572 ;	 function display_prompt
                           1573 ;	-----------------------------------------
   065B                    1574 _display_prompt:
                    065B   1575 	C$cli.c$42$1$1 ==.
                           1576 ;	../cli.c:42: dp_display_text("\r\nCore1553BRT>");
                           1577 ;	genCall
   065B 75 82r00           1578 	mov	dpl,#__str_8
   065E 75 83s00           1579 	mov	dph,#(__str_8 >> 8)
   0661 75 F0 80           1580 	mov	b,#0x80
   0664 12s00r00           1581 	lcall	_dp_display_text
   0667                    1582 00101$:
                    0667   1583 	C$cli.c$45$1$1 ==.
                    0667   1584 	XG$display_prompt$0$0 ==.
   0667 22                 1585 	ret
                           1586 ;------------------------------------------------------------
                           1587 ;Allocation info for local variables in function 'get_key_selection'
                           1588 ;------------------------------------------------------------
                           1589 ;rx_data                   Allocated with name '_get_key_selection_rx_data_1_1'
                           1590 ;rx_size                   Allocated with name '_get_key_selection_rx_size_1_1'
                           1591 ;------------------------------------------------------------
                    0668   1592 	G$get_key_selection$0$0 ==.
                    0668   1593 	C$cli.c$49$1$1 ==.
                           1594 ;	../cli.c:49: uint8_t get_key_selection(void)
                           1595 ;	-----------------------------------------
                           1596 ;	 function get_key_selection
                           1597 ;	-----------------------------------------
   0668                    1598 _get_key_selection:
                    0668   1599 	C$cli.c$56$2$2 ==.
                           1600 ;	../cli.c:56: do {
   0668                    1601 00101$:
                    0668   1602 	C$cli.c$57$2$2 ==.
                           1603 ;	../cli.c:57: rx_size = UART_get_rx(&g_stdio_uart, &rx_data[1],1);
                           1604 ;	genCast
   0668 90s00r00           1605 	mov	dptr,#_UART_get_rx_PARM_2
   066B 74rD2              1606 	mov	a,#(_get_key_selection_rx_data_1_1 + 0x0001)
   066D F0                 1607 	movx	@dptr,a
   066E A3                 1608 	inc	dptr
   066F 74s03              1609 	mov	a,#((_get_key_selection_rx_data_1_1 + 0x0001) >> 8)
   0671 F0                 1610 	movx	@dptr,a
   0672 A3                 1611 	inc	dptr
   0673 74 00              1612 	mov	a,#0x0
   0675 F0                 1613 	movx	@dptr,a
                           1614 ;	genAssign
   0676 90s00r00           1615 	mov	dptr,#_UART_get_rx_PARM_3
   0679 74 01              1616 	mov	a,#0x01
   067B F0                 1617 	movx	@dptr,a
   067C E4                 1618 	clr	a
   067D A3                 1619 	inc	dptr
   067E F0                 1620 	movx	@dptr,a
                           1621 ;	genCall
   067F 75 82r00           1622 	mov	dpl,#_g_stdio_uart
   0682 75 83s00           1623 	mov	dph,#(_g_stdio_uart >> 8)
   0685 75 F0 00           1624 	mov	b,#0x00
   0688 12s00r00           1625 	lcall	_UART_get_rx
   068B AA 82              1626 	mov	r2,dpl
   068D AB 83              1627 	mov	r3,dph
                           1628 ;	genCast
                    068F   1629 	C$cli.c$58$1$1 ==.
                           1630 ;	../cli.c:58: }while(rx_size == 0);
                           1631 ;	genIfx
   068F EA                 1632 	mov	a,r2
                           1633 ;	genIfxJump
   0690 70 03              1634 	jnz	00108$
   0692 02s06r68           1635 	ljmp	00101$
   0695                    1636 00108$:
                    0695   1637 	C$cli.c$60$1$1 ==.
                           1638 ;	../cli.c:60: key = rx_data[1];
                           1639 ;	genPointerGet
                           1640 ;	genFarPointerGet
   0695 90s03rD2           1641 	mov	dptr,#(_get_key_selection_rx_data_1_1 + 0x0001)
   0698 E0                 1642 	movx	a,@dptr
   0699 FA                 1643 	mov	r2,a
                           1644 ;	genAssign
   069A 90s00r00           1645 	mov	dptr,#_key
   069D EA                 1646 	mov	a,r2
   069E F0                 1647 	movx	@dptr,a
                    069F   1648 	C$cli.c$62$1$1 ==.
                           1649 ;	../cli.c:62: UART_send (&g_stdio_uart, &key,sizeof (key));
                           1650 ;	genCast
   069F 90s00r00           1651 	mov	dptr,#_UART_send_PARM_2
   06A2 74r00              1652 	mov	a,#_key
   06A4 F0                 1653 	movx	@dptr,a
   06A5 A3                 1654 	inc	dptr
   06A6 74s00              1655 	mov	a,#(_key >> 8)
   06A8 F0                 1656 	movx	@dptr,a
   06A9 A3                 1657 	inc	dptr
   06AA 74 00              1658 	mov	a,#0x0
   06AC F0                 1659 	movx	@dptr,a
                           1660 ;	genAssign
   06AD 90s00r00           1661 	mov	dptr,#_UART_send_PARM_3
   06B0 74 01              1662 	mov	a,#0x01
   06B2 F0                 1663 	movx	@dptr,a
   06B3 E4                 1664 	clr	a
   06B4 A3                 1665 	inc	dptr
   06B5 F0                 1666 	movx	@dptr,a
                           1667 ;	genCall
   06B6 75 82r00           1668 	mov	dpl,#_g_stdio_uart
   06B9 75 83s00           1669 	mov	dph,#(_g_stdio_uart >> 8)
   06BC 75 F0 00           1670 	mov	b,#0x00
   06BF 12s00r00           1671 	lcall	_UART_send
                    06C2   1672 	C$cli.c$63$1$1 ==.
                           1673 ;	../cli.c:63: return rx_data[1];
                           1674 ;	genPointerGet
                           1675 ;	genFarPointerGet
   06C2 90s03rD2           1676 	mov	dptr,#(_get_key_selection_rx_data_1_1 + 0x0001)
   06C5 E0                 1677 	movx	a,@dptr
   06C6 FA                 1678 	mov	r2,a
                           1679 ;	genRet
   06C7 8A 82              1680 	mov	dpl,r2
   06C9                    1681 00104$:
                    06C9   1682 	C$cli.c$65$1$1 ==.
                    06C9   1683 	XG$get_key_selection$0$0 ==.
   06C9 22                 1684 	ret
                           1685 ;------------------------------------------------------------
                           1686 ;Allocation info for local variables in function 'read_user_input'
                           1687 ;------------------------------------------------------------
                           1688 ;rx_char_ptr               Allocated with name '_read_user_input_rx_char_ptr_1_1'
                           1689 ;recv_char                 Allocated with name '_read_user_input_recv_char_1_1'
                           1690 ;size                      Allocated with name '_read_user_input_size_1_1'
                           1691 ;index                     Allocated with name '_read_user_input_index_1_1'
                           1692 ;------------------------------------------------------------
                    06CA   1693 	G$read_user_input$0$0 ==.
                    06CA   1694 	C$cli.c$72$1$1 ==.
                           1695 ;	../cli.c:72: void read_user_input (uint8_t *rx_char_ptr)
                           1696 ;	-----------------------------------------
                           1697 ;	 function read_user_input
                           1698 ;	-----------------------------------------
   06CA                    1699 _read_user_input:
                           1700 ;	genReceive
   06CA AA F0              1701 	mov	r2,b
   06CC AB 83              1702 	mov	r3,dph
   06CE E5 82              1703 	mov	a,dpl
   06D0 90s03rD3           1704 	mov	dptr,#_read_user_input_rx_char_ptr_1_1
   06D3 F0                 1705 	movx	@dptr,a
   06D4 A3                 1706 	inc	dptr
   06D5 EB                 1707 	mov	a,r3
   06D6 F0                 1708 	movx	@dptr,a
   06D7 A3                 1709 	inc	dptr
   06D8 EA                 1710 	mov	a,r2
   06D9 F0                 1711 	movx	@dptr,a
                    06DA   1712 	C$cli.c$74$1$1 ==.
                           1713 ;	../cli.c:74: uint8_t recv_char=0;
                           1714 ;	genAssign
   06DA 90s03rD6           1715 	mov	dptr,#_read_user_input_recv_char_1_1
   06DD 74 00              1716 	mov	a,#0x00
   06DF F0                 1717 	movx	@dptr,a
                    06E0   1718 	C$cli.c$77$1$1 ==.
                           1719 ;	../cli.c:77: for(index = 0; index < 10; index++)
                           1720 ;	genAssign
   06E0 90s03rD7           1721 	mov	dptr,#_read_user_input_index_1_1
   06E3 74 00              1722 	mov	a,#0x00
   06E5 F0                 1723 	movx	@dptr,a
   06E6                    1724 00106$:
                           1725 ;	genAssign
   06E6 90s03rD7           1726 	mov	dptr,#_read_user_input_index_1_1
   06E9 E0                 1727 	movx	a,@dptr
   06EA FA                 1728 	mov	r2,a
                           1729 ;	genCmpLt
                           1730 ;	genCmp
   06EB BA 0A 00           1731 	cjne	r2,#0x0A,00117$
   06EE                    1732 00117$:
                           1733 ;	genIfxJump
   06EE 40 03              1734 	jc	00118$
   06F0 02s07r0B           1735 	ljmp	00109$
   06F3                    1736 00118$:
                    06F3   1737 	C$cli.c$79$2$2 ==.
                           1738 ;	../cli.c:79: rx_char[index] = '0';
                           1739 ;	genPlus
   06F3 E5 02              1740 	mov	a,ar2
   06F5 24r01              1741 	add	a,#_rx_char
   06F7 F5 82              1742 	mov	dpl,a
   06F9 74 00              1743 	mov	a,#0x00
   06FB 34s00              1744 	addc	a,#(_rx_char >> 8)
   06FD F5 83              1745 	mov	dph,a
                           1746 ;	genPointerSet
                           1747 ;     genFarPointerSet
   06FF 74 30              1748 	mov	a,#0x30
   0701 F0                 1749 	movx	@dptr,a
                    0702   1750 	C$cli.c$77$1$1 ==.
                           1751 ;	../cli.c:77: for(index = 0; index < 10; index++)
                           1752 ;	genPlus
   0702 90s03rD7           1753 	mov	dptr,#_read_user_input_index_1_1
                           1754 ;	genPlusIncr
   0705 EA                 1755 	mov	a,r2
   0706 04                 1756 	inc	a
   0707 F0                 1757 	movx	@dptr,a
   0708 02s06rE6           1758 	ljmp	00106$
   070B                    1759 00109$:
                    070B   1760 	C$cli.c$81$1$1 ==.
                           1761 ;	../cli.c:81: index = 0;
                           1762 ;	genAssign
   070B 90s03rD7           1763 	mov	dptr,#_read_user_input_index_1_1
   070E 74 00              1764 	mov	a,#0x00
   0710 F0                 1765 	movx	@dptr,a
                    0711   1766 	C$cli.c$82$3$4 ==.
                           1767 ;	../cli.c:82: while(recv_char != 13)  //'\n'
                           1768 ;	genAssign
   0711 90s03rD3           1769 	mov	dptr,#_read_user_input_rx_char_ptr_1_1
   0714 E0                 1770 	movx	a,@dptr
   0715 FA                 1771 	mov	r2,a
   0716 A3                 1772 	inc	dptr
   0717 E0                 1773 	movx	a,@dptr
   0718 FB                 1774 	mov	r3,a
   0719 A3                 1775 	inc	dptr
   071A E0                 1776 	movx	a,@dptr
   071B FC                 1777 	mov	r4,a
   071C                    1778 00103$:
                           1779 ;	genAssign
   071C 90s03rD6           1780 	mov	dptr,#_read_user_input_recv_char_1_1
   071F E0                 1781 	movx	a,@dptr
   0720 FD                 1782 	mov	r5,a
                           1783 ;	genCmpEq
                           1784 ;	gencjneshort
   0721 BD 0D 03           1785 	cjne	r5,#0x0D,00119$
   0724 02s07rBC           1786 	ljmp	00110$
   0727                    1787 00119$:
                    0727   1788 	C$cli.c$84$2$3 ==.
                           1789 ;	../cli.c:84: size = UART_get_rx(&g_stdio_uart, &recv_char,1);
                           1790 ;	genCast
   0727 90s00r00           1791 	mov	dptr,#_UART_get_rx_PARM_2
   072A 74rD6              1792 	mov	a,#_read_user_input_recv_char_1_1
   072C F0                 1793 	movx	@dptr,a
   072D A3                 1794 	inc	dptr
   072E 74s03              1795 	mov	a,#(_read_user_input_recv_char_1_1 >> 8)
   0730 F0                 1796 	movx	@dptr,a
   0731 A3                 1797 	inc	dptr
   0732 74 00              1798 	mov	a,#0x0
   0734 F0                 1799 	movx	@dptr,a
                           1800 ;	genAssign
   0735 90s00r00           1801 	mov	dptr,#_UART_get_rx_PARM_3
   0738 74 01              1802 	mov	a,#0x01
   073A F0                 1803 	movx	@dptr,a
   073B E4                 1804 	clr	a
   073C A3                 1805 	inc	dptr
   073D F0                 1806 	movx	@dptr,a
                           1807 ;	genCall
   073E 75 82r00           1808 	mov	dpl,#_g_stdio_uart
   0741 75 83s00           1809 	mov	dph,#(_g_stdio_uart >> 8)
   0744 75 F0 00           1810 	mov	b,#0x00
   0747 C0 02              1811 	push	ar2
   0749 C0 03              1812 	push	ar3
   074B C0 04              1813 	push	ar4
   074D 12s00r00           1814 	lcall	_UART_get_rx
   0750 AD 82              1815 	mov	r5,dpl
   0752 AE 83              1816 	mov	r6,dph
   0754 D0 04              1817 	pop	ar4
   0756 D0 03              1818 	pop	ar3
   0758 D0 02              1819 	pop	ar2
                           1820 ;	genCast
                    075A   1821 	C$cli.c$85$2$3 ==.
                           1822 ;	../cli.c:85: if(size > 0)
                           1823 ;	genIfx
   075A ED                 1824 	mov	a,r5
                           1825 ;	genIfxJump
   075B 70 03              1826 	jnz	00120$
   075D 02s07r1C           1827 	ljmp	00103$
   0760                    1828 00120$:
                    0760   1829 	C$cli.c$88$3$4 ==.
                           1830 ;	../cli.c:88: rx_char_ptr[index] = recv_char;
                           1831 ;	genAssign
   0760 90s03rD7           1832 	mov	dptr,#_read_user_input_index_1_1
   0763 E0                 1833 	movx	a,@dptr
   0764 FD                 1834 	mov	r5,a
                           1835 ;	genPlus
   0765 E5 05              1836 	mov	a,ar5
   0767 25 02              1837 	add	a,ar2
   0769 FE                 1838 	mov	r6,a
   076A 74 00              1839 	mov	a,#0x00
   076C 35 03              1840 	addc	a,ar3
   076E FF                 1841 	mov	r7,a
   076F 8C 00              1842 	mov	ar0,r4
                           1843 ;	genAssign
   0771 90s03rD6           1844 	mov	dptr,#_read_user_input_recv_char_1_1
   0774 E0                 1845 	movx	a,@dptr
   0775 F9                 1846 	mov	r1,a
                           1847 ;	genPointerSet
                           1848 ;	genGenPointerSet
   0776 8E 82              1849 	mov	dpl,r6
   0778 8F 83              1850 	mov	dph,r7
   077A 88 F0              1851 	mov	b,r0
   077C E9                 1852 	mov	a,r1
   077D 12s00r00           1853 	lcall	__gptrput
                    0780   1854 	C$cli.c$89$3$4 ==.
                           1855 ;	../cli.c:89: UART_send (&g_stdio_uart, (uint8_t *)&recv_char,sizeof(recv_char));
                           1856 ;	genCast
   0780 90s00r00           1857 	mov	dptr,#_UART_send_PARM_2
   0783 74rD6              1858 	mov	a,#_read_user_input_recv_char_1_1
   0785 F0                 1859 	movx	@dptr,a
   0786 A3                 1860 	inc	dptr
   0787 74s03              1861 	mov	a,#(_read_user_input_recv_char_1_1 >> 8)
   0789 F0                 1862 	movx	@dptr,a
   078A A3                 1863 	inc	dptr
   078B 74 00              1864 	mov	a,#0x0
   078D F0                 1865 	movx	@dptr,a
                           1866 ;	genAssign
   078E 90s00r00           1867 	mov	dptr,#_UART_send_PARM_3
   0791 74 01              1868 	mov	a,#0x01
   0793 F0                 1869 	movx	@dptr,a
   0794 E4                 1870 	clr	a
   0795 A3                 1871 	inc	dptr
   0796 F0                 1872 	movx	@dptr,a
                           1873 ;	genCall
   0797 75 82r00           1874 	mov	dpl,#_g_stdio_uart
   079A 75 83s00           1875 	mov	dph,#(_g_stdio_uart >> 8)
   079D 75 F0 00           1876 	mov	b,#0x00
   07A0 C0 02              1877 	push	ar2
   07A2 C0 03              1878 	push	ar3
   07A4 C0 04              1879 	push	ar4
   07A6 C0 05              1880 	push	ar5
   07A8 12s00r00           1881 	lcall	_UART_send
   07AB D0 05              1882 	pop	ar5
   07AD D0 04              1883 	pop	ar4
   07AF D0 03              1884 	pop	ar3
   07B1 D0 02              1885 	pop	ar2
                    07B3   1886 	C$cli.c$90$3$4 ==.
                           1887 ;	../cli.c:90: index++;
                           1888 ;	genPlus
   07B3 90s03rD7           1889 	mov	dptr,#_read_user_input_index_1_1
                           1890 ;	genPlusIncr
   07B6 ED                 1891 	mov	a,r5
   07B7 04                 1892 	inc	a
   07B8 F0                 1893 	movx	@dptr,a
                    07B9   1894 	C$cli.c$91$1$1 ==.
                           1895 ;	../cli.c:91: size = 0; // clear the rcvd flag
   07B9 02s07r1C           1896 	ljmp	00103$
   07BC                    1897 00110$:
                    07BC   1898 	C$cli.c$95$1$1 ==.
                    07BC   1899 	XG$read_user_input$0$0 ==.
   07BC 22                 1900 	ret
                           1901 ;------------------------------------------------------------
                           1902 ;Allocation info for local variables in function 'display_brt_regs'
                           1903 ;------------------------------------------------------------
                           1904 ;sloc0                     Allocated with name '_display_brt_regs_sloc0_1_0'
                           1905 ;mem_addr                  Allocated with name '_display_brt_regs_mem_addr_1_1'
                           1906 ;mem_data                  Allocated with name '_display_brt_regs_mem_data_1_1'
                           1907 ;i                         Allocated with name '_display_brt_regs_i_1_1'
                           1908 ;------------------------------------------------------------
                    07BD   1909 	G$display_brt_regs$0$0 ==.
                    07BD   1910 	C$cli.c$102$1$1 ==.
                           1911 ;	../cli.c:102: void display_brt_regs(void){
                           1912 ;	-----------------------------------------
                           1913 ;	 function display_brt_regs
                           1914 ;	-----------------------------------------
   07BD                    1915 _display_brt_regs:
                    07BD   1916 	C$cli.c$107$1$1 ==.
                           1917 ;	../cli.c:107: mem_addr  = ( APB3_BASE_ADDRESS + CORE1553BRT_0) + BRT_REG_OFFSET ;  // base address of BRT instance, 32location from here onwards
                           1918 ;	genAssign
   07BD 90s03rD8           1919 	mov	dptr,#_display_brt_regs_mem_addr_1_1
   07C0 74 E0              1920 	mov	a,#0xE0
   07C2 F0                 1921 	movx	@dptr,a
   07C3 A3                 1922 	inc	dptr
   07C4 74 FF              1923 	mov	a,#0xFF
   07C6 F0                 1924 	movx	@dptr,a
   07C7 A3                 1925 	inc	dptr
   07C8 74 00              1926 	mov	a,#0x00
   07CA F0                 1927 	movx	@dptr,a
   07CB A3                 1928 	inc	dptr
   07CC 74 00              1929 	mov	a,#0x00
   07CE F0                 1930 	movx	@dptr,a
                    07CF   1931 	C$cli.c$109$1$1 ==.
                           1932 ;	../cli.c:109: dp_display_text("\n\r BRT Register Contents\r\n ");
                           1933 ;	genCall
   07CF 75 82r0F           1934 	mov	dpl,#__str_9
   07D2 75 83s00           1935 	mov	dph,#(__str_9 >> 8)
   07D5 75 F0 80           1936 	mov	b,#0x80
   07D8 12s00r00           1937 	lcall	_dp_display_text
                    07DB   1938 	C$cli.c$110$1$1 ==.
                           1939 ;	../cli.c:110: for ( i=0; i<= 32 ;i++) {
                           1940 ;	genAssign
   07DB 90s03rDC           1941 	mov	dptr,#_display_brt_regs_i_1_1
   07DE 74 00              1942 	mov	a,#0x00
   07E0 F0                 1943 	movx	@dptr,a
   07E1                    1944 00101$:
                           1945 ;	genAssign
   07E1 90s03rDC           1946 	mov	dptr,#_display_brt_regs_i_1_1
   07E4 E0                 1947 	movx	a,@dptr
   07E5 F5*00              1948 	mov	_display_brt_regs_sloc0_1_0,a
                           1949 ;	genCmpGt
                           1950 ;	genCmp
   07E7 C3                 1951 	clr	c
   07E8 74 20              1952 	mov	a,#0x20
   07EA 95*00              1953 	subb	a,_display_brt_regs_sloc0_1_0
                           1954 ;	genIfxJump
   07EC 50 03              1955 	jnc	00109$
   07EE 02s08rCB           1956 	ljmp	00105$
   07F1                    1957 00109$:
                    07F1   1958 	C$cli.c$111$2$2 ==.
                           1959 ;	../cli.c:111: dp_display_text("\r\n");
                           1960 ;	genCall
   07F1 75 82r2B           1961 	mov	dpl,#__str_10
   07F4 75 83s00           1962 	mov	dph,#(__str_10 >> 8)
   07F7 75 F0 80           1963 	mov	b,#0x80
   07FA 12s00r00           1964 	lcall	_dp_display_text
                    07FD   1965 	C$cli.c$112$2$2 ==.
                           1966 ;	../cli.c:112: dp_display_value(i,DEC);
                           1967 ;	genCast
   07FD AB*00              1968 	mov	r3,_display_brt_regs_sloc0_1_0
   07FF 7C 00              1969 	mov	r4,#0x00
   0801 7D 00              1970 	mov	r5,#0x00
   0803 7E 00              1971 	mov	r6,#0x00
                           1972 ;	genAssign
   0805 90s00r00           1973 	mov	dptr,#_dp_display_value_PARM_2
   0808 74 01              1974 	mov	a,#0x01
   080A F0                 1975 	movx	@dptr,a
   080B E4                 1976 	clr	a
   080C A3                 1977 	inc	dptr
   080D F0                 1978 	movx	@dptr,a
                           1979 ;	genCall
   080E 8B 82              1980 	mov	dpl,r3
   0810 8C 83              1981 	mov	dph,r4
   0812 8D F0              1982 	mov	b,r5
   0814 EE                 1983 	mov	a,r6
   0815 12s00r00           1984 	lcall	_dp_display_value
                    0818   1985 	C$cli.c$113$2$2 ==.
                           1986 ;	../cli.c:113: dp_display_text("\t");
                           1987 ;	genCall
   0818 75 82r2E           1988 	mov	dpl,#__str_11
   081B 75 83s00           1989 	mov	dph,#(__str_11 >> 8)
   081E 75 F0 80           1990 	mov	b,#0x80
   0821 12s00r00           1991 	lcall	_dp_display_text
                    0824   1992 	C$cli.c$114$2$2 ==.
                           1993 ;	../cli.c:114: dp_display_value(mem_addr,HEX);
                           1994 ;	genAssign
   0824 90s03rD8           1995 	mov	dptr,#_display_brt_regs_mem_addr_1_1
   0827 E0                 1996 	movx	a,@dptr
   0828 FB                 1997 	mov	r3,a
   0829 A3                 1998 	inc	dptr
   082A E0                 1999 	movx	a,@dptr
   082B FC                 2000 	mov	r4,a
   082C A3                 2001 	inc	dptr
   082D E0                 2002 	movx	a,@dptr
   082E FD                 2003 	mov	r5,a
   082F A3                 2004 	inc	dptr
   0830 E0                 2005 	movx	a,@dptr
   0831 FE                 2006 	mov	r6,a
                           2007 ;	genAssign
   0832 90s00r00           2008 	mov	dptr,#_dp_display_value_PARM_2
   0835 E4                 2009 	clr	a
   0836 F0                 2010 	movx	@dptr,a
   0837 A3                 2011 	inc	dptr
   0838 F0                 2012 	movx	@dptr,a
                           2013 ;	genCall
   0839 8B 82              2014 	mov	dpl,r3
   083B 8C 83              2015 	mov	dph,r4
   083D 8D F0              2016 	mov	b,r5
   083F EE                 2017 	mov	a,r6
   0840 C0 03              2018 	push	ar3
   0842 C0 04              2019 	push	ar4
   0844 C0 05              2020 	push	ar5
   0846 C0 06              2021 	push	ar6
   0848 12s00r00           2022 	lcall	_dp_display_value
   084B D0 06              2023 	pop	ar6
   084D D0 05              2024 	pop	ar5
   084F D0 04              2025 	pop	ar4
   0851 D0 03              2026 	pop	ar3
                    0853   2027 	C$cli.c$115$2$2 ==.
                           2028 ;	../cli.c:115: dp_display_text("\t");
                           2029 ;	genCall
   0853 75 82r2E           2030 	mov	dpl,#__str_11
   0856 75 83s00           2031 	mov	dph,#(__str_11 >> 8)
   0859 75 F0 80           2032 	mov	b,#0x80
   085C C0 03              2033 	push	ar3
   085E C0 04              2034 	push	ar4
   0860 C0 05              2035 	push	ar5
   0862 C0 06              2036 	push	ar6
   0864 12s00r00           2037 	lcall	_dp_display_text
   0867 D0 06              2038 	pop	ar6
   0869 D0 05              2039 	pop	ar5
   086B D0 04              2040 	pop	ar4
   086D D0 03              2041 	pop	ar3
                    086F   2042 	C$cli.c$116$2$2 ==.
                           2043 ;	../cli.c:116: mem_data = HW_get_16bit_reg(mem_addr);
                           2044 ;	genCast
   086F 8B 07              2045 	mov	ar7,r3
   0871 8C 00              2046 	mov	ar0,r4
                           2047 ;	genCall
   0873 8F 82              2048 	mov	dpl,r7
   0875 88 83              2049 	mov	dph,r0
   0877 C0 03              2050 	push	ar3
   0879 C0 04              2051 	push	ar4
   087B C0 05              2052 	push	ar5
   087D C0 06              2053 	push	ar6
   087F 12s00r00           2054 	lcall	_HW_get_16bit_reg
   0882 AF 82              2055 	mov	r7,dpl
   0884 A8 83              2056 	mov	r0,dph
   0886 D0 06              2057 	pop	ar6
   0888 D0 05              2058 	pop	ar5
   088A D0 04              2059 	pop	ar4
   088C D0 03              2060 	pop	ar3
                           2061 ;	genCast
   088E 79 00              2062 	mov	r1,#0x00
   0890 7A 00              2063 	mov	r2,#0x00
                    0892   2064 	C$cli.c$117$2$2 ==.
                           2065 ;	../cli.c:117: dp_display_value(mem_data,HEX);
                           2066 ;	genAssign
   0892 90s00r00           2067 	mov	dptr,#_dp_display_value_PARM_2
   0895 E4                 2068 	clr	a
   0896 F0                 2069 	movx	@dptr,a
   0897 A3                 2070 	inc	dptr
   0898 F0                 2071 	movx	@dptr,a
                           2072 ;	genCall
   0899 8F 82              2073 	mov	dpl,r7
   089B 88 83              2074 	mov	dph,r0
   089D 89 F0              2075 	mov	b,r1
   089F EA                 2076 	mov	a,r2
   08A0 C0 03              2077 	push	ar3
   08A2 C0 04              2078 	push	ar4
   08A4 C0 05              2079 	push	ar5
   08A6 C0 06              2080 	push	ar6
   08A8 12s00r00           2081 	lcall	_dp_display_value
   08AB D0 06              2082 	pop	ar6
   08AD D0 05              2083 	pop	ar5
   08AF D0 04              2084 	pop	ar4
   08B1 D0 03              2085 	pop	ar3
                    08B3   2086 	C$cli.c$118$2$2 ==.
                           2087 ;	../cli.c:118: mem_addr = mem_addr++;
                           2088 ;	genAssign
   08B3 90s03rD8           2089 	mov	dptr,#_display_brt_regs_mem_addr_1_1
   08B6 EB                 2090 	mov	a,r3
   08B7 F0                 2091 	movx	@dptr,a
   08B8 A3                 2092 	inc	dptr
   08B9 EC                 2093 	mov	a,r4
   08BA F0                 2094 	movx	@dptr,a
   08BB A3                 2095 	inc	dptr
   08BC ED                 2096 	mov	a,r5
   08BD F0                 2097 	movx	@dptr,a
   08BE A3                 2098 	inc	dptr
   08BF EE                 2099 	mov	a,r6
   08C0 F0                 2100 	movx	@dptr,a
                    08C1   2101 	C$cli.c$110$1$1 ==.
                           2102 ;	../cli.c:110: for ( i=0; i<= 32 ;i++) {
                           2103 ;	genPlus
   08C1 90s03rDC           2104 	mov	dptr,#_display_brt_regs_i_1_1
                           2105 ;	genPlusIncr
   08C4 E5*00              2106 	mov	a,_display_brt_regs_sloc0_1_0
   08C6 04                 2107 	inc	a
   08C7 F0                 2108 	movx	@dptr,a
   08C8 02s07rE1           2109 	ljmp	00101$
   08CB                    2110 00105$:
                    08CB   2111 	C$cli.c$120$1$1 ==.
                    08CB   2112 	XG$display_brt_regs$0$0 ==.
   08CB 22                 2113 	ret
                           2114 ;------------------------------------------------------------
                           2115 ;Allocation info for local variables in function 'display_brt_data'
                           2116 ;------------------------------------------------------------
                           2117 ;subaddr                   Allocated with name '_display_brt_data_PARM_2'
                           2118 ;brt_baseaddr              Allocated with name '_display_brt_data_brt_baseaddr_1_1'
                           2119 ;mem_addr                  Allocated with name '_display_brt_data_mem_addr_1_1'
                           2120 ;mem_data                  Allocated with name '_display_brt_data_mem_data_1_1'
                           2121 ;tx_sub_address            Allocated with name '_display_brt_data_tx_sub_address_1_1'
                           2122 ;rx_sub_address            Allocated with name '_display_brt_data_rx_sub_address_1_1'
                           2123 ;i                         Allocated with name '_display_brt_data_i_1_1'
                           2124 ;m                         Allocated with name '_display_brt_data_m_1_1'
                           2125 ;------------------------------------------------------------
                    08CC   2126 	G$display_brt_data$0$0 ==.
                    08CC   2127 	C$cli.c$129$1$1 ==.
                           2128 ;	../cli.c:129: void display_brt_data(uint32_t brt_baseaddr,uint8_t subaddr){
                           2129 ;	-----------------------------------------
                           2130 ;	 function display_brt_data
                           2131 ;	-----------------------------------------
   08CC                    2132 _display_brt_data:
                           2133 ;	genReceive
   08CC AA 82              2134 	mov	r2,dpl
   08CE AB 83              2135 	mov	r3,dph
   08D0 AC F0              2136 	mov	r4,b
   08D2 FD                 2137 	mov	r5,a
   08D3 90s03rDE           2138 	mov	dptr,#_display_brt_data_brt_baseaddr_1_1
   08D6 EA                 2139 	mov	a,r2
   08D7 F0                 2140 	movx	@dptr,a
   08D8 A3                 2141 	inc	dptr
   08D9 EB                 2142 	mov	a,r3
   08DA F0                 2143 	movx	@dptr,a
   08DB A3                 2144 	inc	dptr
   08DC EC                 2145 	mov	a,r4
   08DD F0                 2146 	movx	@dptr,a
   08DE A3                 2147 	inc	dptr
   08DF ED                 2148 	mov	a,r5
   08E0 F0                 2149 	movx	@dptr,a
                    08E1   2150 	C$cli.c$136$1$1 ==.
                           2151 ;	../cli.c:136: mem_addr  = (APB3_BASE_ADDRESS +  brt_baseaddr);  // 16 location from here onwards
                           2152 ;	genAssign
   08E1 90s03rDE           2153 	mov	dptr,#_display_brt_data_brt_baseaddr_1_1
   08E4 E0                 2154 	movx	a,@dptr
   08E5 FA                 2155 	mov	r2,a
   08E6 A3                 2156 	inc	dptr
   08E7 E0                 2157 	movx	a,@dptr
   08E8 FB                 2158 	mov	r3,a
   08E9 A3                 2159 	inc	dptr
   08EA E0                 2160 	movx	a,@dptr
   08EB FC                 2161 	mov	r4,a
   08EC A3                 2162 	inc	dptr
   08ED E0                 2163 	movx	a,@dptr
   08EE FD                 2164 	mov	r5,a
                           2165 ;	genPlus
                           2166 ;	genPlusIncr
                           2167 ;     genPlus shortcut
   08EF 74 F0              2168 	mov	a,#0xF0
   08F1 25 03              2169 	add	a,ar3
   08F3 FB                 2170 	mov	r3,a
   08F4 74 00              2171 	mov	a,#0x00
   08F6 35 04              2172 	addc	a,ar4
   08F8 FC                 2173 	mov	r4,a
   08F9 74 00              2174 	mov	a,#0x00
   08FB 35 05              2175 	addc	a,ar5
   08FD FD                 2176 	mov	r5,a
                           2177 ;	genCast
                    08FE   2178 	C$cli.c$138$1$1 ==.
                           2179 ;	../cli.c:138: rx_sub_address = mem_addr + (BRT_RX_SA1 * subaddr);   //0x1080
                           2180 ;	genAssign
   08FE 90s03rDD           2181 	mov	dptr,#_display_brt_data_PARM_2
   0901 E0                 2182 	movx	a,@dptr
   0902 FC                 2183 	mov	r4,a
                           2184 ;	genMult
                           2185 ;	genMultOneByte
   0903 EC                 2186 	mov	a,r4
   0904 75 F0 20           2187 	mov	b,#0x20
   0907 A4                 2188 	mul	ab
                           2189 ;	genPlus
   0908 25 02              2190 	add	a,ar2
   090A FA                 2191 	mov	r2,a
   090B E5 03              2192 	mov	a,ar3
   090D 35 F0              2193 	addc	a,b
   090F FB                 2194 	mov	r3,a
                           2195 ;	genAssign
   0910 90s03rE4           2196 	mov	dptr,#_display_brt_data_rx_sub_address_1_1
   0913 EA                 2197 	mov	a,r2
   0914 F0                 2198 	movx	@dptr,a
   0915 A3                 2199 	inc	dptr
   0916 EB                 2200 	mov	a,r3
   0917 F0                 2201 	movx	@dptr,a
                    0918   2202 	C$cli.c$139$1$1 ==.
                           2203 ;	../cli.c:139: tx_sub_address = rx_sub_address + BRT_RX_TX_ADDR_OFSET;
                           2204 ;	genPlus
   0918 90s03rE2           2205 	mov	dptr,#_display_brt_data_tx_sub_address_1_1
                           2206 ;	genPlusIncr
                           2207 ;     genPlus shortcut
   091B EA                 2208 	mov	a,r2
   091C F0                 2209 	movx	@dptr,a
   091D 74 04              2210 	mov	a,#0x04
   091F 25 03              2211 	add	a,ar3
   0921 A3                 2212 	inc	dptr
   0922 F0                 2213 	movx	@dptr,a
                    0923   2214 	C$cli.c$141$1$1 ==.
                           2215 ;	../cli.c:141: dp_display_text("\n\r BRT SA");
                           2216 ;	genCall
   0923 75 82r30           2217 	mov	dpl,#__str_12
   0926 75 83s00           2218 	mov	dph,#(__str_12 >> 8)
   0929 75 F0 80           2219 	mov	b,#0x80
   092C C0 04              2220 	push	ar4
   092E 12s00r00           2221 	lcall	_dp_display_text
   0931 D0 04              2222 	pop	ar4
                    0933   2223 	C$cli.c$142$1$1 ==.
                           2224 ;	../cli.c:142: dp_display_value(subaddr,DEC);
                           2225 ;	genCast
   0933 7A 00              2226 	mov	r2,#0x00
   0935 7B 00              2227 	mov	r3,#0x00
   0937 7D 00              2228 	mov	r5,#0x00
                           2229 ;	genAssign
   0939 90s00r00           2230 	mov	dptr,#_dp_display_value_PARM_2
   093C 74 01              2231 	mov	a,#0x01
   093E F0                 2232 	movx	@dptr,a
   093F E4                 2233 	clr	a
   0940 A3                 2234 	inc	dptr
   0941 F0                 2235 	movx	@dptr,a
                           2236 ;	genCall
   0942 8C 82              2237 	mov	dpl,r4
   0944 8A 83              2238 	mov	dph,r2
   0946 8B F0              2239 	mov	b,r3
   0948 ED                 2240 	mov	a,r5
   0949 C0 02              2241 	push	ar2
   094B C0 03              2242 	push	ar3
   094D C0 04              2243 	push	ar4
   094F C0 05              2244 	push	ar5
   0951 12s00r00           2245 	lcall	_dp_display_value
   0954 D0 05              2246 	pop	ar5
   0956 D0 04              2247 	pop	ar4
   0958 D0 03              2248 	pop	ar3
   095A D0 02              2249 	pop	ar2
                    095C   2250 	C$cli.c$143$1$1 ==.
                           2251 ;	../cli.c:143: dp_display_text("   RX Buffer\r\n");
                           2252 ;	genCall
   095C 75 82r3A           2253 	mov	dpl,#__str_13
   095F 75 83s00           2254 	mov	dph,#(__str_13 >> 8)
   0962 75 F0 80           2255 	mov	b,#0x80
   0965 C0 02              2256 	push	ar2
   0967 C0 03              2257 	push	ar3
   0969 C0 04              2258 	push	ar4
   096B C0 05              2259 	push	ar5
   096D 12s00r00           2260 	lcall	_dp_display_text
   0970 D0 05              2261 	pop	ar5
   0972 D0 04              2262 	pop	ar4
   0974 D0 03              2263 	pop	ar3
   0976 D0 02              2264 	pop	ar2
                    0978   2265 	C$cli.c$145$1$1 ==.
                           2266 ;	../cli.c:145: for ( i=1; i <= 4 ;i++) {
                           2267 ;	genAssign
   0978 90s03rE6           2268 	mov	dptr,#_display_brt_data_i_1_1
   097B 74 01              2269 	mov	a,#0x01
   097D F0                 2270 	movx	@dptr,a
   097E                    2271 00104$:
                           2272 ;	genAssign
   097E 90s03rE6           2273 	mov	dptr,#_display_brt_data_i_1_1
   0981 E0                 2274 	movx	a,@dptr
   0982 FE                 2275 	mov	r6,a
                           2276 ;	genCmpGt
                           2277 ;	genCmp
   0983 C3                 2278 	clr	c
   0984 74 04              2279 	mov	a,#0x04
   0986 9E                 2280 	subb	a,r6
                           2281 ;	genIfxJump
   0987 50 03              2282 	jnc	00125$
   0989 02s0ArFE           2283 	ljmp	00107$
   098C                    2284 00125$:
                    098C   2285 	C$cli.c$146$2$2 ==.
                           2286 ;	../cli.c:146: dp_display_text("\r\n");
                           2287 ;	genCall
   098C 75 82r2B           2288 	mov	dpl,#__str_10
   098F 75 83s00           2289 	mov	dph,#(__str_10 >> 8)
   0992 75 F0 80           2290 	mov	b,#0x80
   0995 C0 02              2291 	push	ar2
   0997 C0 03              2292 	push	ar3
   0999 C0 04              2293 	push	ar4
   099B C0 05              2294 	push	ar5
   099D C0 06              2295 	push	ar6
   099F 12s00r00           2296 	lcall	_dp_display_text
   09A2 D0 06              2297 	pop	ar6
   09A4 D0 05              2298 	pop	ar5
   09A6 D0 04              2299 	pop	ar4
   09A8 D0 03              2300 	pop	ar3
   09AA D0 02              2301 	pop	ar2
                    09AC   2302 	C$cli.c$147$2$2 ==.
                           2303 ;	../cli.c:147: dp_display_value(i,DEC);
                           2304 ;	genCast
   09AC 7F 00              2305 	mov	r7,#0x00
   09AE 78 00              2306 	mov	r0,#0x00
   09B0 79 00              2307 	mov	r1,#0x00
                           2308 ;	genAssign
   09B2 90s00r00           2309 	mov	dptr,#_dp_display_value_PARM_2
   09B5 74 01              2310 	mov	a,#0x01
   09B7 F0                 2311 	movx	@dptr,a
   09B8 E4                 2312 	clr	a
   09B9 A3                 2313 	inc	dptr
   09BA F0                 2314 	movx	@dptr,a
                           2315 ;	genCall
   09BB 8E 82              2316 	mov	dpl,r6
   09BD 8F 83              2317 	mov	dph,r7
   09BF 88 F0              2318 	mov	b,r0
   09C1 E9                 2319 	mov	a,r1
   09C2 C0 02              2320 	push	ar2
   09C4 C0 03              2321 	push	ar3
   09C6 C0 04              2322 	push	ar4
   09C8 C0 05              2323 	push	ar5
   09CA 12s00r00           2324 	lcall	_dp_display_value
   09CD D0 05              2325 	pop	ar5
   09CF D0 04              2326 	pop	ar4
   09D1 D0 03              2327 	pop	ar3
   09D3 D0 02              2328 	pop	ar2
                    09D5   2329 	C$cli.c$148$2$2 ==.
                           2330 ;	../cli.c:148: dp_display_text("\t");
                           2331 ;	genCall
   09D5 75 82r2E           2332 	mov	dpl,#__str_11
   09D8 75 83s00           2333 	mov	dph,#(__str_11 >> 8)
   09DB 75 F0 80           2334 	mov	b,#0x80
   09DE C0 02              2335 	push	ar2
   09E0 C0 03              2336 	push	ar3
   09E2 C0 04              2337 	push	ar4
   09E4 C0 05              2338 	push	ar5
   09E6 12s00r00           2339 	lcall	_dp_display_text
   09E9 D0 05              2340 	pop	ar5
   09EB D0 04              2341 	pop	ar4
   09ED D0 03              2342 	pop	ar3
   09EF D0 02              2343 	pop	ar2
                    09F1   2344 	C$cli.c$149$2$2 ==.
                           2345 ;	../cli.c:149: dp_display_value(rx_sub_address ,HEX);// ( 8* i) for calculating current address of the total 32 location
                           2346 ;	genAssign
   09F1 90s03rE4           2347 	mov	dptr,#_display_brt_data_rx_sub_address_1_1
   09F4 E0                 2348 	movx	a,@dptr
   09F5 FE                 2349 	mov	r6,a
   09F6 A3                 2350 	inc	dptr
   09F7 E0                 2351 	movx	a,@dptr
   09F8 FF                 2352 	mov	r7,a
                           2353 ;	genCast
   09F9 78 00              2354 	mov	r0,#0x00
   09FB 79 00              2355 	mov	r1,#0x00
                           2356 ;	genAssign
   09FD 90s00r00           2357 	mov	dptr,#_dp_display_value_PARM_2
   0A00 E4                 2358 	clr	a
   0A01 F0                 2359 	movx	@dptr,a
   0A02 A3                 2360 	inc	dptr
   0A03 F0                 2361 	movx	@dptr,a
                           2362 ;	genCall
   0A04 8E 82              2363 	mov	dpl,r6
   0A06 8F 83              2364 	mov	dph,r7
   0A08 88 F0              2365 	mov	b,r0
   0A0A E9                 2366 	mov	a,r1
   0A0B C0 02              2367 	push	ar2
   0A0D C0 03              2368 	push	ar3
   0A0F C0 04              2369 	push	ar4
   0A11 C0 05              2370 	push	ar5
   0A13 12s00r00           2371 	lcall	_dp_display_value
   0A16 D0 05              2372 	pop	ar5
   0A18 D0 04              2373 	pop	ar4
   0A1A D0 03              2374 	pop	ar3
   0A1C D0 02              2375 	pop	ar2
                    0A1E   2376 	C$cli.c$150$2$2 ==.
                           2377 ;	../cli.c:150: dp_display_text("\t");
                           2378 ;	genCall
   0A1E 75 82r2E           2379 	mov	dpl,#__str_11
   0A21 75 83s00           2380 	mov	dph,#(__str_11 >> 8)
   0A24 75 F0 80           2381 	mov	b,#0x80
   0A27 C0 02              2382 	push	ar2
   0A29 C0 03              2383 	push	ar3
   0A2B C0 04              2384 	push	ar4
   0A2D C0 05              2385 	push	ar5
   0A2F 12s00r00           2386 	lcall	_dp_display_text
   0A32 D0 05              2387 	pop	ar5
   0A34 D0 04              2388 	pop	ar4
   0A36 D0 03              2389 	pop	ar3
   0A38 D0 02              2390 	pop	ar2
                    0A3A   2391 	C$cli.c$152$2$2 ==.
                           2392 ;	../cli.c:152: for (m=1; m <=8 ;m++){
                           2393 ;	genAssign
   0A3A 90s03rE7           2394 	mov	dptr,#_display_brt_data_m_1_1
   0A3D 74 08              2395 	mov	a,#0x08
   0A3F F0                 2396 	movx	@dptr,a
   0A40                    2397 00103$:
                    0A40   2398 	C$cli.c$154$1$1 ==.
                           2399 ;	../cli.c:154: mem_data= HW_get_16bit_reg(rx_sub_address);
                           2400 ;	genIpush
   0A40 C0 04              2401 	push	ar4
   0A42 C0 02              2402 	push	ar2
   0A44 C0 03              2403 	push	ar3
   0A46 C0 05              2404 	push	ar5
                           2405 ;	genAssign
   0A48 90s03rE4           2406 	mov	dptr,#_display_brt_data_rx_sub_address_1_1
   0A4B E0                 2407 	movx	a,@dptr
   0A4C FE                 2408 	mov	r6,a
   0A4D A3                 2409 	inc	dptr
   0A4E E0                 2410 	movx	a,@dptr
   0A4F FF                 2411 	mov	r7,a
                           2412 ;	genCall
   0A50 8E 82              2413 	mov	dpl,r6
   0A52 8F 83              2414 	mov	dph,r7
   0A54 C0 02              2415 	push	ar2
   0A56 C0 03              2416 	push	ar3
   0A58 C0 04              2417 	push	ar4
   0A5A C0 05              2418 	push	ar5
   0A5C C0 06              2419 	push	ar6
   0A5E C0 07              2420 	push	ar7
   0A60 12s00r00           2421 	lcall	_HW_get_16bit_reg
   0A63 A8 82              2422 	mov	r0,dpl
   0A65 A9 83              2423 	mov	r1,dph
   0A67 D0 07              2424 	pop	ar7
   0A69 D0 06              2425 	pop	ar6
   0A6B D0 05              2426 	pop	ar5
   0A6D D0 04              2427 	pop	ar4
   0A6F D0 03              2428 	pop	ar3
   0A71 D0 02              2429 	pop	ar2
                    0A73   2430 	C$cli.c$155$3$3 ==.
                           2431 ;	../cli.c:155: dp_display_value(mem_data,HEX);
                           2432 ;	genCast
   0A73 7A 00              2433 	mov	r2,#0x00
   0A75 7B 00              2434 	mov	r3,#0x00
                           2435 ;	genAssign
   0A77 90s00r00           2436 	mov	dptr,#_dp_display_value_PARM_2
   0A7A E4                 2437 	clr	a
   0A7B F0                 2438 	movx	@dptr,a
   0A7C A3                 2439 	inc	dptr
   0A7D F0                 2440 	movx	@dptr,a
                           2441 ;	genCall
   0A7E 88 82              2442 	mov	dpl,r0
   0A80 89 83              2443 	mov	dph,r1
   0A82 8A F0              2444 	mov	b,r2
   0A84 EB                 2445 	mov	a,r3
   0A85 C0 02              2446 	push	ar2
   0A87 C0 03              2447 	push	ar3
   0A89 C0 04              2448 	push	ar4
   0A8B C0 05              2449 	push	ar5
   0A8D C0 06              2450 	push	ar6
   0A8F C0 07              2451 	push	ar7
   0A91 12s00r00           2452 	lcall	_dp_display_value
   0A94 D0 07              2453 	pop	ar7
   0A96 D0 06              2454 	pop	ar6
   0A98 D0 05              2455 	pop	ar5
   0A9A D0 04              2456 	pop	ar4
   0A9C D0 03              2457 	pop	ar3
   0A9E D0 02              2458 	pop	ar2
                    0AA0   2459 	C$cli.c$156$3$3 ==.
                           2460 ;	../cli.c:156: dp_display_text("\t");
                           2461 ;	genCall
   0AA0 75 82r2E           2462 	mov	dpl,#__str_11
   0AA3 75 83s00           2463 	mov	dph,#(__str_11 >> 8)
   0AA6 75 F0 80           2464 	mov	b,#0x80
   0AA9 C0 02              2465 	push	ar2
   0AAB C0 03              2466 	push	ar3
   0AAD C0 04              2467 	push	ar4
   0AAF C0 05              2468 	push	ar5
   0AB1 C0 06              2469 	push	ar6
   0AB3 C0 07              2470 	push	ar7
   0AB5 12s00r00           2471 	lcall	_dp_display_text
   0AB8 D0 07              2472 	pop	ar7
   0ABA D0 06              2473 	pop	ar6
   0ABC D0 05              2474 	pop	ar5
   0ABE D0 04              2475 	pop	ar4
   0AC0 D0 03              2476 	pop	ar3
   0AC2 D0 02              2477 	pop	ar2
                    0AC4   2478 	C$cli.c$157$3$3 ==.
                           2479 ;	../cli.c:157: rx_sub_address = rx_sub_address + 1;
                           2480 ;	genPlus
   0AC4 90s03rE4           2481 	mov	dptr,#_display_brt_data_rx_sub_address_1_1
                           2482 ;	genPlusIncr
   0AC7 74 01              2483 	mov	a,#0x01
   0AC9 25 06              2484 	add	a,ar6
   0ACB F0                 2485 	movx	@dptr,a
   0ACC 74 00              2486 	mov	a,#0x00
   0ACE 35 07              2487 	addc	a,ar7
   0AD0 A3                 2488 	inc	dptr
   0AD1 F0                 2489 	movx	@dptr,a
                           2490 ;	genAssign
   0AD2 90s03rE7           2491 	mov	dptr,#_display_brt_data_m_1_1
   0AD5 E0                 2492 	movx	a,@dptr
   0AD6 FA                 2493 	mov	r2,a
                           2494 ;	genMinus
                           2495 ;	genMinusDec
   0AD7 EA                 2496 	mov	a,r2
   0AD8 14                 2497 	dec	a
                           2498 ;	genAssign
   0AD9 90s03rE7           2499 	mov	dptr,#_display_brt_data_m_1_1
   0ADC F0                 2500 	movx	@dptr,a
                    0ADD   2501 	C$cli.c$152$3$3 ==.
                           2502 ;	../cli.c:152: for (m=1; m <=8 ;m++){
                           2503 ;	genAssign
   0ADD 90s03rE7           2504 	mov	dptr,#_display_brt_data_m_1_1
   0AE0 E0                 2505 	movx	a,@dptr
   0AE1 FA                 2506 	mov	r2,a
                           2507 ;	genIfx
   0AE2 EA                 2508 	mov	a,r2
                           2509 ;	genIpop
   0AE3 D0 05              2510 	pop	ar5
   0AE5 D0 03              2511 	pop	ar3
   0AE7 D0 02              2512 	pop	ar2
   0AE9 D0 04              2513 	pop	ar4
                           2514 ;	genIfxJump
   0AEB 60 03              2515 	jz	00126$
   0AED 02s0Ar40           2516 	ljmp	00103$
   0AF0                    2517 00126$:
                    0AF0   2518 	C$cli.c$145$1$1 ==.
                           2519 ;	../cli.c:145: for ( i=1; i <= 4 ;i++) {
                           2520 ;	genAssign
   0AF0 90s03rE6           2521 	mov	dptr,#_display_brt_data_i_1_1
   0AF3 E0                 2522 	movx	a,@dptr
   0AF4 FE                 2523 	mov	r6,a
                           2524 ;	genPlus
   0AF5 90s03rE6           2525 	mov	dptr,#_display_brt_data_i_1_1
                           2526 ;	genPlusIncr
   0AF8 EE                 2527 	mov	a,r6
   0AF9 04                 2528 	inc	a
   0AFA F0                 2529 	movx	@dptr,a
   0AFB 02s09r7E           2530 	ljmp	00104$
   0AFE                    2531 00107$:
                    0AFE   2532 	C$cli.c$163$1$1 ==.
                           2533 ;	../cli.c:163: dp_display_text("\n\r BRT SA");
                           2534 ;	genCall
   0AFE 75 82r30           2535 	mov	dpl,#__str_12
   0B01 75 83s00           2536 	mov	dph,#(__str_12 >> 8)
   0B04 75 F0 80           2537 	mov	b,#0x80
   0B07 C0 02              2538 	push	ar2
   0B09 C0 03              2539 	push	ar3
   0B0B C0 04              2540 	push	ar4
   0B0D C0 05              2541 	push	ar5
   0B0F 12s00r00           2542 	lcall	_dp_display_text
   0B12 D0 05              2543 	pop	ar5
   0B14 D0 04              2544 	pop	ar4
   0B16 D0 03              2545 	pop	ar3
   0B18 D0 02              2546 	pop	ar2
                    0B1A   2547 	C$cli.c$164$1$1 ==.
                           2548 ;	../cli.c:164: dp_display_value(subaddr,DEC);
                           2549 ;	genAssign
   0B1A 90s00r00           2550 	mov	dptr,#_dp_display_value_PARM_2
   0B1D 74 01              2551 	mov	a,#0x01
   0B1F F0                 2552 	movx	@dptr,a
   0B20 E4                 2553 	clr	a
   0B21 A3                 2554 	inc	dptr
   0B22 F0                 2555 	movx	@dptr,a
                           2556 ;	genCall
   0B23 8C 82              2557 	mov	dpl,r4
   0B25 8A 83              2558 	mov	dph,r2
   0B27 8B F0              2559 	mov	b,r3
   0B29 ED                 2560 	mov	a,r5
   0B2A 12s00r00           2561 	lcall	_dp_display_value
                    0B2D   2562 	C$cli.c$165$1$1 ==.
                           2563 ;	../cli.c:165: dp_display_text("  TX Buffer\r\n");
                           2564 ;	genCall
   0B2D 75 82r49           2565 	mov	dpl,#__str_14
   0B30 75 83s00           2566 	mov	dph,#(__str_14 >> 8)
   0B33 75 F0 80           2567 	mov	b,#0x80
   0B36 12s00r00           2568 	lcall	_dp_display_text
                    0B39   2569 	C$cli.c$167$1$1 ==.
                           2570 ;	../cli.c:167: for ( i=1; i <= 4 ;i++) {
                           2571 ;	genAssign
   0B39 90s03rE6           2572 	mov	dptr,#_display_brt_data_i_1_1
   0B3C 74 01              2573 	mov	a,#0x01
   0B3E F0                 2574 	movx	@dptr,a
   0B3F                    2575 00111$:
                           2576 ;	genAssign
   0B3F 90s03rE6           2577 	mov	dptr,#_display_brt_data_i_1_1
   0B42 E0                 2578 	movx	a,@dptr
   0B43 FA                 2579 	mov	r2,a
                           2580 ;	genCmpGt
                           2581 ;	genCmp
   0B44 C3                 2582 	clr	c
   0B45 74 04              2583 	mov	a,#0x04
   0B47 9A                 2584 	subb	a,r2
                           2585 ;	genIfxJump
   0B48 50 03              2586 	jnc	00127$
   0B4A 02s0Cr2F           2587 	ljmp	00115$
   0B4D                    2588 00127$:
                    0B4D   2589 	C$cli.c$168$2$4 ==.
                           2590 ;	../cli.c:168: dp_display_text("\r\n");
                           2591 ;	genCall
   0B4D 75 82r2B           2592 	mov	dpl,#__str_10
   0B50 75 83s00           2593 	mov	dph,#(__str_10 >> 8)
   0B53 75 F0 80           2594 	mov	b,#0x80
   0B56 C0 02              2595 	push	ar2
   0B58 12s00r00           2596 	lcall	_dp_display_text
   0B5B D0 02              2597 	pop	ar2
                    0B5D   2598 	C$cli.c$169$2$4 ==.
                           2599 ;	../cli.c:169: dp_display_value(i,DEC);
                           2600 ;	genCast
   0B5D 7B 00              2601 	mov	r3,#0x00
   0B5F 7C 00              2602 	mov	r4,#0x00
   0B61 7D 00              2603 	mov	r5,#0x00
                           2604 ;	genAssign
   0B63 90s00r00           2605 	mov	dptr,#_dp_display_value_PARM_2
   0B66 74 01              2606 	mov	a,#0x01
   0B68 F0                 2607 	movx	@dptr,a
   0B69 E4                 2608 	clr	a
   0B6A A3                 2609 	inc	dptr
   0B6B F0                 2610 	movx	@dptr,a
                           2611 ;	genCall
   0B6C 8A 82              2612 	mov	dpl,r2
   0B6E 8B 83              2613 	mov	dph,r3
   0B70 8C F0              2614 	mov	b,r4
   0B72 ED                 2615 	mov	a,r5
   0B73 12s00r00           2616 	lcall	_dp_display_value
                    0B76   2617 	C$cli.c$170$2$4 ==.
                           2618 ;	../cli.c:170: dp_display_text("\t");
                           2619 ;	genCall
   0B76 75 82r2E           2620 	mov	dpl,#__str_11
   0B79 75 83s00           2621 	mov	dph,#(__str_11 >> 8)
   0B7C 75 F0 80           2622 	mov	b,#0x80
   0B7F 12s00r00           2623 	lcall	_dp_display_text
                    0B82   2624 	C$cli.c$171$2$4 ==.
                           2625 ;	../cli.c:171: dp_display_value(tx_sub_address,HEX);
                           2626 ;	genAssign
   0B82 90s03rE2           2627 	mov	dptr,#_display_brt_data_tx_sub_address_1_1
   0B85 E0                 2628 	movx	a,@dptr
   0B86 FA                 2629 	mov	r2,a
   0B87 A3                 2630 	inc	dptr
   0B88 E0                 2631 	movx	a,@dptr
   0B89 FB                 2632 	mov	r3,a
                           2633 ;	genCast
   0B8A 7C 00              2634 	mov	r4,#0x00
   0B8C 7D 00              2635 	mov	r5,#0x00
                           2636 ;	genAssign
   0B8E 90s00r00           2637 	mov	dptr,#_dp_display_value_PARM_2
   0B91 E4                 2638 	clr	a
   0B92 F0                 2639 	movx	@dptr,a
   0B93 A3                 2640 	inc	dptr
   0B94 F0                 2641 	movx	@dptr,a
                           2642 ;	genCall
   0B95 8A 82              2643 	mov	dpl,r2
   0B97 8B 83              2644 	mov	dph,r3
   0B99 8C F0              2645 	mov	b,r4
   0B9B ED                 2646 	mov	a,r5
   0B9C 12s00r00           2647 	lcall	_dp_display_value
                    0B9F   2648 	C$cli.c$172$2$4 ==.
                           2649 ;	../cli.c:172: dp_display_text("\t");
                           2650 ;	genCall
   0B9F 75 82r2E           2651 	mov	dpl,#__str_11
   0BA2 75 83s00           2652 	mov	dph,#(__str_11 >> 8)
   0BA5 75 F0 80           2653 	mov	b,#0x80
   0BA8 12s00r00           2654 	lcall	_dp_display_text
                    0BAB   2655 	C$cli.c$174$2$4 ==.
                           2656 ;	../cli.c:174: for (m=1; m <=8 ;m++){
                           2657 ;	genAssign
   0BAB 90s03rE7           2658 	mov	dptr,#_display_brt_data_m_1_1
   0BAE 74 08              2659 	mov	a,#0x08
   0BB0 F0                 2660 	movx	@dptr,a
   0BB1                    2661 00110$:
                    0BB1   2662 	C$cli.c$176$3$5 ==.
                           2663 ;	../cli.c:176: mem_data= HW_get_16bit_reg(tx_sub_address);
                           2664 ;	genAssign
   0BB1 90s03rE2           2665 	mov	dptr,#_display_brt_data_tx_sub_address_1_1
   0BB4 E0                 2666 	movx	a,@dptr
   0BB5 FA                 2667 	mov	r2,a
   0BB6 A3                 2668 	inc	dptr
   0BB7 E0                 2669 	movx	a,@dptr
   0BB8 FB                 2670 	mov	r3,a
                           2671 ;	genCall
   0BB9 8A 82              2672 	mov	dpl,r2
   0BBB 8B 83              2673 	mov	dph,r3
   0BBD C0 02              2674 	push	ar2
   0BBF C0 03              2675 	push	ar3
   0BC1 12s00r00           2676 	lcall	_HW_get_16bit_reg
   0BC4 AC 82              2677 	mov	r4,dpl
   0BC6 AD 83              2678 	mov	r5,dph
   0BC8 D0 03              2679 	pop	ar3
   0BCA D0 02              2680 	pop	ar2
                    0BCC   2681 	C$cli.c$177$3$5 ==.
                           2682 ;	../cli.c:177: dp_display_value(mem_data,HEX);
                           2683 ;	genCast
   0BCC 7E 00              2684 	mov	r6,#0x00
   0BCE 7F 00              2685 	mov	r7,#0x00
                           2686 ;	genAssign
   0BD0 90s00r00           2687 	mov	dptr,#_dp_display_value_PARM_2
   0BD3 E4                 2688 	clr	a
   0BD4 F0                 2689 	movx	@dptr,a
   0BD5 A3                 2690 	inc	dptr
   0BD6 F0                 2691 	movx	@dptr,a
                           2692 ;	genCall
   0BD7 8C 82              2693 	mov	dpl,r4
   0BD9 8D 83              2694 	mov	dph,r5
   0BDB 8E F0              2695 	mov	b,r6
   0BDD EF                 2696 	mov	a,r7
   0BDE C0 02              2697 	push	ar2
   0BE0 C0 03              2698 	push	ar3
   0BE2 12s00r00           2699 	lcall	_dp_display_value
   0BE5 D0 03              2700 	pop	ar3
   0BE7 D0 02              2701 	pop	ar2
                    0BE9   2702 	C$cli.c$178$3$5 ==.
                           2703 ;	../cli.c:178: dp_display_text("\t");
                           2704 ;	genCall
   0BE9 75 82r2E           2705 	mov	dpl,#__str_11
   0BEC 75 83s00           2706 	mov	dph,#(__str_11 >> 8)
   0BEF 75 F0 80           2707 	mov	b,#0x80
   0BF2 C0 02              2708 	push	ar2
   0BF4 C0 03              2709 	push	ar3
   0BF6 12s00r00           2710 	lcall	_dp_display_text
   0BF9 D0 03              2711 	pop	ar3
   0BFB D0 02              2712 	pop	ar2
                    0BFD   2713 	C$cli.c$179$3$5 ==.
                           2714 ;	../cli.c:179: tx_sub_address = tx_sub_address + 1;
                           2715 ;	genPlus
   0BFD 90s03rE2           2716 	mov	dptr,#_display_brt_data_tx_sub_address_1_1
                           2717 ;	genPlusIncr
   0C00 74 01              2718 	mov	a,#0x01
   0C02 25 02              2719 	add	a,ar2
   0C04 F0                 2720 	movx	@dptr,a
   0C05 74 00              2721 	mov	a,#0x00
   0C07 35 03              2722 	addc	a,ar3
   0C09 A3                 2723 	inc	dptr
   0C0A F0                 2724 	movx	@dptr,a
                           2725 ;	genAssign
   0C0B 90s03rE7           2726 	mov	dptr,#_display_brt_data_m_1_1
   0C0E E0                 2727 	movx	a,@dptr
   0C0F FA                 2728 	mov	r2,a
                           2729 ;	genMinus
                           2730 ;	genMinusDec
   0C10 EA                 2731 	mov	a,r2
   0C11 14                 2732 	dec	a
                           2733 ;	genAssign
   0C12 90s03rE7           2734 	mov	dptr,#_display_brt_data_m_1_1
   0C15 F0                 2735 	movx	@dptr,a
                    0C16   2736 	C$cli.c$174$3$5 ==.
                           2737 ;	../cli.c:174: for (m=1; m <=8 ;m++){
                           2738 ;	genAssign
   0C16 90s03rE7           2739 	mov	dptr,#_display_brt_data_m_1_1
   0C19 E0                 2740 	movx	a,@dptr
   0C1A FA                 2741 	mov	r2,a
                           2742 ;	genIfx
   0C1B EA                 2743 	mov	a,r2
                           2744 ;	genIfxJump
   0C1C 60 03              2745 	jz	00128$
   0C1E 02s0BrB1           2746 	ljmp	00110$
   0C21                    2747 00128$:
                    0C21   2748 	C$cli.c$167$1$1 ==.
                           2749 ;	../cli.c:167: for ( i=1; i <= 4 ;i++) {
                           2750 ;	genAssign
   0C21 90s03rE6           2751 	mov	dptr,#_display_brt_data_i_1_1
   0C24 E0                 2752 	movx	a,@dptr
   0C25 FA                 2753 	mov	r2,a
                           2754 ;	genPlus
   0C26 90s03rE6           2755 	mov	dptr,#_display_brt_data_i_1_1
                           2756 ;	genPlusIncr
   0C29 EA                 2757 	mov	a,r2
   0C2A 04                 2758 	inc	a
   0C2B F0                 2759 	movx	@dptr,a
   0C2C 02s0Br3F           2760 	ljmp	00111$
   0C2F                    2761 00115$:
                    0C2F   2762 	C$cli.c$184$1$1 ==.
                    0C2F   2763 	XG$display_brt_data$0$0 ==.
   0C2F 22                 2764 	ret
                           2765 ;------------------------------------------------------------
                           2766 ;Allocation info for local variables in function 'process_uart_data'
                           2767 ;------------------------------------------------------------
                           2768 ;key                       Allocated with name '_process_uart_data_key_1_1'
                           2769 ;------------------------------------------------------------
                    0C30   2770 	G$process_uart_data$0$0 ==.
                    0C30   2771 	C$cli.c$192$1$1 ==.
                           2772 ;	../cli.c:192: void process_uart_data(uint8_t key)
                           2773 ;	-----------------------------------------
                           2774 ;	 function process_uart_data
                           2775 ;	-----------------------------------------
   0C30                    2776 _process_uart_data:
                           2777 ;	genReceive
   0C30 E5 82              2778 	mov	a,dpl
   0C32 90s03rE8           2779 	mov	dptr,#_process_uart_data_key_1_1
   0C35 F0                 2780 	movx	@dptr,a
                    0C36   2781 	C$cli.c$194$1$1 ==.
                           2782 ;	../cli.c:194: switch(key)
                           2783 ;	genAssign
   0C36 90s03rE8           2784 	mov	dptr,#_process_uart_data_key_1_1
   0C39 E0                 2785 	movx	a,@dptr
   0C3A FA                 2786 	mov	r2,a
                           2787 ;	genCmpEq
                           2788 ;	gencjneshort
   0C3B BA 44 03           2789 	cjne	r2,#0x44,00116$
   0C3E 02s0Cr6D           2790 	ljmp	00106$
   0C41                    2791 00116$:
                           2792 ;	genCmpEq
                           2793 ;	gencjneshort
   0C41 BA 48 03           2794 	cjne	r2,#0x48,00117$
   0C44 02s0Cr67           2795 	ljmp	00104$
   0C47                    2796 00117$:
                           2797 ;	genCmpEq
                           2798 ;	gencjneshort
   0C47 BA 52 03           2799 	cjne	r2,#0x52,00118$
   0C4A 02s0Cr61           2800 	ljmp	00102$
   0C4D                    2801 00118$:
                           2802 ;	genCmpEq
                           2803 ;	gencjneshort
   0C4D BA 64 03           2804 	cjne	r2,#0x64,00119$
   0C50 02s0Cr6D           2805 	ljmp	00106$
   0C53                    2806 00119$:
                           2807 ;	genCmpEq
                           2808 ;	gencjneshort
   0C53 BA 68 03           2809 	cjne	r2,#0x68,00120$
   0C56 02s0Cr67           2810 	ljmp	00104$
   0C59                    2811 00120$:
                           2812 ;	genCmpEq
                           2813 ;	gencjneshort
   0C59 BA 72 02           2814 	cjne	r2,#0x72,00121$
   0C5C 80 03              2815 	sjmp	00122$
   0C5E                    2816 00121$:
   0C5E 02s0Cr70           2817 	ljmp	00108$
   0C61                    2818 00122$:
                    0C61   2819 	C$cli.c$197$2$2 ==.
                           2820 ;	../cli.c:197: case 'R' : case 'r':
   0C61                    2821 00102$:
                    0C61   2822 	C$cli.c$200$3$3 ==.
                           2823 ;	../cli.c:200: display_brt_regs();
                           2824 ;	genCall
   0C61 12s07rBD           2825 	lcall	_display_brt_regs
                    0C64   2826 	C$cli.c$204$3$3 ==.
                           2827 ;	../cli.c:204: break;
   0C64 02s0Cr70           2828 	ljmp	00108$
                    0C67   2829 	C$cli.c$209$2$2 ==.
                           2830 ;	../cli.c:209: case 'H': case 'h':
   0C67                    2831 00104$:
                    0C67   2832 	C$cli.c$212$3$4 ==.
                           2833 ;	../cli.c:212: display_help();
                           2834 ;	genCall
   0C67 12s00r00           2835 	lcall	_display_help
                    0C6A   2836 	C$cli.c$213$3$4 ==.
                           2837 ;	../cli.c:213: break;
   0C6A 02s0Cr70           2838 	ljmp	00108$
                    0C6D   2839 	C$cli.c$216$2$2 ==.
                           2840 ;	../cli.c:216: case 'D': case 'd':
   0C6D                    2841 00106$:
                    0C6D   2842 	C$cli.c$220$3$5 ==.
                           2843 ;	../cli.c:220: display_brt_sa (); //get user input and display SA data
                           2844 ;	genCall
   0C6D 12s0ErCA           2845 	lcall	_display_brt_sa
                    0C70   2846 	C$cli.c$232$1$1 ==.
                           2847 ;	../cli.c:232: }
   0C70                    2848 00108$:
                    0C70   2849 	C$cli.c$235$1$1 ==.
                           2850 ;	../cli.c:235: display_prompt();
                           2851 ;	genCall
   0C70 12s06r5B           2852 	lcall	_display_prompt
   0C73                    2853 00109$:
                    0C73   2854 	C$cli.c$237$1$1 ==.
                    0C73   2855 	XG$process_uart_data$0$0 ==.
   0C73 22                 2856 	ret
                           2857 ;------------------------------------------------------------
                           2858 ;Allocation info for local variables in function 'display_mem_data'
                           2859 ;------------------------------------------------------------
                           2860 ;mem_addr                  Allocated with name '_display_mem_data_mem_addr_1_1'
                           2861 ;mem_data                  Allocated with name '_display_mem_data_mem_data_1_1'
                           2862 ;tx_sub_address            Allocated with name '_display_mem_data_tx_sub_address_1_1'
                           2863 ;rx_sub_address            Allocated with name '_display_mem_data_rx_sub_address_1_1'
                           2864 ;i                         Allocated with name '_display_mem_data_i_1_1'
                           2865 ;m                         Allocated with name '_display_mem_data_m_1_1'
                           2866 ;------------------------------------------------------------
                    0C74   2867 	G$display_mem_data$0$0 ==.
                    0C74   2868 	C$cli.c$242$1$1 ==.
                           2869 ;	../cli.c:242: void display_mem_data(void){
                           2870 ;	-----------------------------------------
                           2871 ;	 function display_mem_data
                           2872 ;	-----------------------------------------
   0C74                    2873 _display_mem_data:
                    0C74   2874 	C$cli.c$252$1$1 ==.
                           2875 ;	../cli.c:252: rx_sub_address = mem_addr;   //0x1080
                           2876 ;	genAssign
   0C74 90s03rED           2877 	mov	dptr,#_display_mem_data_rx_sub_address_1_1
   0C77 74 00              2878 	mov	a,#0x00
   0C79 F0                 2879 	movx	@dptr,a
   0C7A A3                 2880 	inc	dptr
   0C7B 74 F5              2881 	mov	a,#0xF5
   0C7D F0                 2882 	movx	@dptr,a
                    0C7E   2883 	C$cli.c$253$1$1 ==.
                           2884 ;	../cli.c:253: tx_sub_address = mem_addr;
                           2885 ;	genAssign
   0C7E 90s03rEB           2886 	mov	dptr,#_display_mem_data_tx_sub_address_1_1
   0C81 74 00              2887 	mov	a,#0x00
   0C83 F0                 2888 	movx	@dptr,a
   0C84 A3                 2889 	inc	dptr
   0C85 74 F5              2890 	mov	a,#0xF5
   0C87 F0                 2891 	movx	@dptr,a
                    0C88   2892 	C$cli.c$254$1$1 ==.
                           2893 ;	../cli.c:254: mem_data   = 0x0000;
                           2894 ;	genAssign
   0C88 90s03rE9           2895 	mov	dptr,#_display_mem_data_mem_data_1_1
   0C8B E4                 2896 	clr	a
   0C8C F0                 2897 	movx	@dptr,a
   0C8D A3                 2898 	inc	dptr
   0C8E F0                 2899 	movx	@dptr,a
                    0C8F   2900 	C$cli.c$256$1$1 ==.
                           2901 ;	../cli.c:256: dp_display_text("\n\r MEMORY FiLLING WIETH FOLLOWING DATA ");
                           2902 ;	genCall
   0C8F 75 82r57           2903 	mov	dpl,#__str_15
   0C92 75 83s00           2904 	mov	dph,#(__str_15 >> 8)
   0C95 75 F0 80           2905 	mov	b,#0x80
   0C98 12s00r00           2906 	lcall	_dp_display_text
                    0C9B   2907 	C$cli.c$260$1$1 ==.
                           2908 ;	../cli.c:260: for ( i=0; i <= 3 ;i++) {
                           2909 ;	genAssign
   0C9B 90s03rEF           2910 	mov	dptr,#_display_mem_data_i_1_1
   0C9E 74 00              2911 	mov	a,#0x00
   0CA0 F0                 2912 	movx	@dptr,a
   0CA1                    2913 00104$:
                           2914 ;	genAssign
   0CA1 90s03rEF           2915 	mov	dptr,#_display_mem_data_i_1_1
   0CA4 E0                 2916 	movx	a,@dptr
   0CA5 FA                 2917 	mov	r2,a
                           2918 ;	genCmpGt
                           2919 ;	genCmp
   0CA6 C3                 2920 	clr	c
   0CA7 74 03              2921 	mov	a,#0x03
   0CA9 9A                 2922 	subb	a,r2
                           2923 ;	genIfxJump
   0CAA 50 03              2924 	jnc	00125$
   0CAC 02s0DrC7           2925 	ljmp	00107$
   0CAF                    2926 00125$:
                    0CAF   2927 	C$cli.c$261$2$2 ==.
                           2928 ;	../cli.c:261: dp_display_text("\r\n");
                           2929 ;	genCall
   0CAF 75 82r2B           2930 	mov	dpl,#__str_10
   0CB2 75 83s00           2931 	mov	dph,#(__str_10 >> 8)
   0CB5 75 F0 80           2932 	mov	b,#0x80
   0CB8 C0 02              2933 	push	ar2
   0CBA 12s00r00           2934 	lcall	_dp_display_text
   0CBD D0 02              2935 	pop	ar2
                    0CBF   2936 	C$cli.c$262$2$2 ==.
                           2937 ;	../cli.c:262: dp_display_value(i,DEC);
                           2938 ;	genCast
   0CBF 7B 00              2939 	mov	r3,#0x00
   0CC1 7C 00              2940 	mov	r4,#0x00
   0CC3 7D 00              2941 	mov	r5,#0x00
                           2942 ;	genAssign
   0CC5 90s00r00           2943 	mov	dptr,#_dp_display_value_PARM_2
   0CC8 74 01              2944 	mov	a,#0x01
   0CCA F0                 2945 	movx	@dptr,a
   0CCB E4                 2946 	clr	a
   0CCC A3                 2947 	inc	dptr
   0CCD F0                 2948 	movx	@dptr,a
                           2949 ;	genCall
   0CCE 8A 82              2950 	mov	dpl,r2
   0CD0 8B 83              2951 	mov	dph,r3
   0CD2 8C F0              2952 	mov	b,r4
   0CD4 ED                 2953 	mov	a,r5
   0CD5 12s00r00           2954 	lcall	_dp_display_value
                    0CD8   2955 	C$cli.c$263$2$2 ==.
                           2956 ;	../cli.c:263: dp_display_text("\t");
                           2957 ;	genCall
   0CD8 75 82r2E           2958 	mov	dpl,#__str_11
   0CDB 75 83s00           2959 	mov	dph,#(__str_11 >> 8)
   0CDE 75 F0 80           2960 	mov	b,#0x80
   0CE1 12s00r00           2961 	lcall	_dp_display_text
                    0CE4   2962 	C$cli.c$264$2$2 ==.
                           2963 ;	../cli.c:264: dp_display_value(rx_sub_address,HEX);// ( 8* i) for calculating current address of the total 32 location
                           2964 ;	genAssign
   0CE4 90s03rED           2965 	mov	dptr,#_display_mem_data_rx_sub_address_1_1
   0CE7 E0                 2966 	movx	a,@dptr
   0CE8 FA                 2967 	mov	r2,a
   0CE9 A3                 2968 	inc	dptr
   0CEA E0                 2969 	movx	a,@dptr
   0CEB FB                 2970 	mov	r3,a
                           2971 ;	genCast
   0CEC 7C 00              2972 	mov	r4,#0x00
   0CEE 7D 00              2973 	mov	r5,#0x00
                           2974 ;	genAssign
   0CF0 90s00r00           2975 	mov	dptr,#_dp_display_value_PARM_2
   0CF3 E4                 2976 	clr	a
   0CF4 F0                 2977 	movx	@dptr,a
   0CF5 A3                 2978 	inc	dptr
   0CF6 F0                 2979 	movx	@dptr,a
                           2980 ;	genCall
   0CF7 8A 82              2981 	mov	dpl,r2
   0CF9 8B 83              2982 	mov	dph,r3
   0CFB 8C F0              2983 	mov	b,r4
   0CFD ED                 2984 	mov	a,r5
   0CFE 12s00r00           2985 	lcall	_dp_display_value
                    0D01   2986 	C$cli.c$265$2$2 ==.
                           2987 ;	../cli.c:265: dp_display_text("\t");
                           2988 ;	genCall
   0D01 75 82r2E           2989 	mov	dpl,#__str_11
   0D04 75 83s00           2990 	mov	dph,#(__str_11 >> 8)
   0D07 75 F0 80           2991 	mov	b,#0x80
   0D0A 12s00r00           2992 	lcall	_dp_display_text
                    0D0D   2993 	C$cli.c$267$2$2 ==.
                           2994 ;	../cli.c:267: for (m=1; m <=8 ;m++){
                           2995 ;	genAssign
   0D0D 90s03rF0           2996 	mov	dptr,#_display_mem_data_m_1_1
   0D10 74 08              2997 	mov	a,#0x08
   0D12 F0                 2998 	movx	@dptr,a
   0D13                    2999 00103$:
                    0D13   3000 	C$cli.c$269$3$3 ==.
                           3001 ;	../cli.c:269: HW_set_16bit_reg(rx_sub_address,mem_data);
                           3002 ;	genAssign
   0D13 90s03rED           3003 	mov	dptr,#_display_mem_data_rx_sub_address_1_1
   0D16 E0                 3004 	movx	a,@dptr
   0D17 FA                 3005 	mov	r2,a
   0D18 A3                 3006 	inc	dptr
   0D19 E0                 3007 	movx	a,@dptr
   0D1A FB                 3008 	mov	r3,a
                           3009 ;	genAssign
   0D1B 90s03rE9           3010 	mov	dptr,#_display_mem_data_mem_data_1_1
   0D1E E0                 3011 	movx	a,@dptr
   0D1F FC                 3012 	mov	r4,a
   0D20 A3                 3013 	inc	dptr
   0D21 E0                 3014 	movx	a,@dptr
   0D22 FD                 3015 	mov	r5,a
                           3016 ;	genAssign
   0D23 90s00r00           3017 	mov	dptr,#_HW_set_16bit_reg_PARM_2
   0D26 EC                 3018 	mov	a,r4
   0D27 F0                 3019 	movx	@dptr,a
   0D28 A3                 3020 	inc	dptr
   0D29 ED                 3021 	mov	a,r5
   0D2A F0                 3022 	movx	@dptr,a
                           3023 ;	genCall
   0D2B 8A 82              3024 	mov	dpl,r2
   0D2D 8B 83              3025 	mov	dph,r3
   0D2F C0 02              3026 	push	ar2
   0D31 C0 03              3027 	push	ar3
   0D33 C0 04              3028 	push	ar4
   0D35 C0 05              3029 	push	ar5
   0D37 12s00r00           3030 	lcall	_HW_set_16bit_reg
   0D3A D0 05              3031 	pop	ar5
   0D3C D0 04              3032 	pop	ar4
   0D3E D0 03              3033 	pop	ar3
   0D40 D0 02              3034 	pop	ar2
                    0D42   3035 	C$cli.c$270$3$3 ==.
                           3036 ;	../cli.c:270: dp_display_value(mem_data,HEX);
                           3037 ;	genCast
   0D42 8C 06              3038 	mov	ar6,r4
   0D44 8D 07              3039 	mov	ar7,r5
   0D46 78 00              3040 	mov	r0,#0x00
   0D48 79 00              3041 	mov	r1,#0x00
                           3042 ;	genAssign
   0D4A 90s00r00           3043 	mov	dptr,#_dp_display_value_PARM_2
   0D4D E4                 3044 	clr	a
   0D4E F0                 3045 	movx	@dptr,a
   0D4F A3                 3046 	inc	dptr
   0D50 F0                 3047 	movx	@dptr,a
                           3048 ;	genCall
   0D51 8E 82              3049 	mov	dpl,r6
   0D53 8F 83              3050 	mov	dph,r7
   0D55 88 F0              3051 	mov	b,r0
   0D57 E9                 3052 	mov	a,r1
   0D58 C0 02              3053 	push	ar2
   0D5A C0 03              3054 	push	ar3
   0D5C C0 04              3055 	push	ar4
   0D5E C0 05              3056 	push	ar5
   0D60 12s00r00           3057 	lcall	_dp_display_value
   0D63 D0 05              3058 	pop	ar5
   0D65 D0 04              3059 	pop	ar4
   0D67 D0 03              3060 	pop	ar3
   0D69 D0 02              3061 	pop	ar2
                    0D6B   3062 	C$cli.c$271$3$3 ==.
                           3063 ;	../cli.c:271: dp_display_text("\t");
                           3064 ;	genCall
   0D6B 75 82r2E           3065 	mov	dpl,#__str_11
   0D6E 75 83s00           3066 	mov	dph,#(__str_11 >> 8)
   0D71 75 F0 80           3067 	mov	b,#0x80
   0D74 C0 02              3068 	push	ar2
   0D76 C0 03              3069 	push	ar3
   0D78 C0 04              3070 	push	ar4
   0D7A C0 05              3071 	push	ar5
   0D7C 12s00r00           3072 	lcall	_dp_display_text
   0D7F D0 05              3073 	pop	ar5
   0D81 D0 04              3074 	pop	ar4
   0D83 D0 03              3075 	pop	ar3
   0D85 D0 02              3076 	pop	ar2
                    0D87   3077 	C$cli.c$272$3$3 ==.
                           3078 ;	../cli.c:272: rx_sub_address = rx_sub_address + 1;
                           3079 ;	genPlus
   0D87 90s03rED           3080 	mov	dptr,#_display_mem_data_rx_sub_address_1_1
                           3081 ;	genPlusIncr
   0D8A 74 01              3082 	mov	a,#0x01
   0D8C 25 02              3083 	add	a,ar2
   0D8E F0                 3084 	movx	@dptr,a
   0D8F 74 00              3085 	mov	a,#0x00
   0D91 35 03              3086 	addc	a,ar3
   0D93 A3                 3087 	inc	dptr
   0D94 F0                 3088 	movx	@dptr,a
                    0D95   3089 	C$cli.c$273$3$3 ==.
                           3090 ;	../cli.c:273: mem_data = mem_data + 4;
                           3091 ;	genPlus
   0D95 90s03rE9           3092 	mov	dptr,#_display_mem_data_mem_data_1_1
                           3093 ;	genPlusIncr
   0D98 74 04              3094 	mov	a,#0x04
   0D9A 25 04              3095 	add	a,ar4
   0D9C F0                 3096 	movx	@dptr,a
   0D9D 74 00              3097 	mov	a,#0x00
   0D9F 35 05              3098 	addc	a,ar5
   0DA1 A3                 3099 	inc	dptr
   0DA2 F0                 3100 	movx	@dptr,a
                           3101 ;	genAssign
   0DA3 90s03rF0           3102 	mov	dptr,#_display_mem_data_m_1_1
   0DA6 E0                 3103 	movx	a,@dptr
   0DA7 FA                 3104 	mov	r2,a
                           3105 ;	genMinus
                           3106 ;	genMinusDec
   0DA8 EA                 3107 	mov	a,r2
   0DA9 14                 3108 	dec	a
                           3109 ;	genAssign
   0DAA 90s03rF0           3110 	mov	dptr,#_display_mem_data_m_1_1
   0DAD F0                 3111 	movx	@dptr,a
                    0DAE   3112 	C$cli.c$267$3$3 ==.
                           3113 ;	../cli.c:267: for (m=1; m <=8 ;m++){
                           3114 ;	genAssign
   0DAE 90s03rF0           3115 	mov	dptr,#_display_mem_data_m_1_1
   0DB1 E0                 3116 	movx	a,@dptr
   0DB2 FA                 3117 	mov	r2,a
                           3118 ;	genIfx
   0DB3 EA                 3119 	mov	a,r2
                           3120 ;	genIfxJump
   0DB4 60 03              3121 	jz	00126$
   0DB6 02s0Dr13           3122 	ljmp	00103$
   0DB9                    3123 00126$:
                    0DB9   3124 	C$cli.c$260$1$1 ==.
                           3125 ;	../cli.c:260: for ( i=0; i <= 3 ;i++) {
                           3126 ;	genAssign
   0DB9 90s03rEF           3127 	mov	dptr,#_display_mem_data_i_1_1
   0DBC E0                 3128 	movx	a,@dptr
   0DBD FA                 3129 	mov	r2,a
                           3130 ;	genPlus
   0DBE 90s03rEF           3131 	mov	dptr,#_display_mem_data_i_1_1
                           3132 ;	genPlusIncr
   0DC1 EA                 3133 	mov	a,r2
   0DC2 04                 3134 	inc	a
   0DC3 F0                 3135 	movx	@dptr,a
   0DC4 02s0CrA1           3136 	ljmp	00104$
   0DC7                    3137 00107$:
                    0DC7   3138 	C$cli.c$279$1$1 ==.
                           3139 ;	../cli.c:279: dp_display_text("\n\r Reading back the data from the same location");
                           3140 ;	genCall
   0DC7 75 82r7F           3141 	mov	dpl,#__str_16
   0DCA 75 83s00           3142 	mov	dph,#(__str_16 >> 8)
   0DCD 75 F0 80           3143 	mov	b,#0x80
   0DD0 12s00r00           3144 	lcall	_dp_display_text
                    0DD3   3145 	C$cli.c$283$1$1 ==.
                           3146 ;	../cli.c:283: for ( i=0; i <= 3 ;i++) {
                           3147 ;	genAssign
   0DD3 90s03rEF           3148 	mov	dptr,#_display_mem_data_i_1_1
   0DD6 74 00              3149 	mov	a,#0x00
   0DD8 F0                 3150 	movx	@dptr,a
   0DD9                    3151 00111$:
                           3152 ;	genAssign
   0DD9 90s03rEF           3153 	mov	dptr,#_display_mem_data_i_1_1
   0DDC E0                 3154 	movx	a,@dptr
   0DDD FA                 3155 	mov	r2,a
                           3156 ;	genCmpGt
                           3157 ;	genCmp
   0DDE C3                 3158 	clr	c
   0DDF 74 03              3159 	mov	a,#0x03
   0DE1 9A                 3160 	subb	a,r2
                           3161 ;	genIfxJump
   0DE2 50 03              3162 	jnc	00127$
   0DE4 02s0ErC9           3163 	ljmp	00115$
   0DE7                    3164 00127$:
                    0DE7   3165 	C$cli.c$284$2$4 ==.
                           3166 ;	../cli.c:284: dp_display_text("\r\n");
                           3167 ;	genCall
   0DE7 75 82r2B           3168 	mov	dpl,#__str_10
   0DEA 75 83s00           3169 	mov	dph,#(__str_10 >> 8)
   0DED 75 F0 80           3170 	mov	b,#0x80
   0DF0 C0 02              3171 	push	ar2
   0DF2 12s00r00           3172 	lcall	_dp_display_text
   0DF5 D0 02              3173 	pop	ar2
                    0DF7   3174 	C$cli.c$285$2$4 ==.
                           3175 ;	../cli.c:285: dp_display_value(i,DEC);
                           3176 ;	genCast
   0DF7 7B 00              3177 	mov	r3,#0x00
   0DF9 7C 00              3178 	mov	r4,#0x00
   0DFB 7D 00              3179 	mov	r5,#0x00
                           3180 ;	genAssign
   0DFD 90s00r00           3181 	mov	dptr,#_dp_display_value_PARM_2
   0E00 74 01              3182 	mov	a,#0x01
   0E02 F0                 3183 	movx	@dptr,a
   0E03 E4                 3184 	clr	a
   0E04 A3                 3185 	inc	dptr
   0E05 F0                 3186 	movx	@dptr,a
                           3187 ;	genCall
   0E06 8A 82              3188 	mov	dpl,r2
   0E08 8B 83              3189 	mov	dph,r3
   0E0A 8C F0              3190 	mov	b,r4
   0E0C ED                 3191 	mov	a,r5
   0E0D 12s00r00           3192 	lcall	_dp_display_value
                    0E10   3193 	C$cli.c$286$2$4 ==.
                           3194 ;	../cli.c:286: dp_display_text("\t");
                           3195 ;	genCall
   0E10 75 82r2E           3196 	mov	dpl,#__str_11
   0E13 75 83s00           3197 	mov	dph,#(__str_11 >> 8)
   0E16 75 F0 80           3198 	mov	b,#0x80
   0E19 12s00r00           3199 	lcall	_dp_display_text
                    0E1C   3200 	C$cli.c$287$2$4 ==.
                           3201 ;	../cli.c:287: dp_display_value(tx_sub_address,HEX);
                           3202 ;	genAssign
   0E1C 90s03rEB           3203 	mov	dptr,#_display_mem_data_tx_sub_address_1_1
   0E1F E0                 3204 	movx	a,@dptr
   0E20 FA                 3205 	mov	r2,a
   0E21 A3                 3206 	inc	dptr
   0E22 E0                 3207 	movx	a,@dptr
   0E23 FB                 3208 	mov	r3,a
                           3209 ;	genCast
   0E24 7C 00              3210 	mov	r4,#0x00
   0E26 7D 00              3211 	mov	r5,#0x00
                           3212 ;	genAssign
   0E28 90s00r00           3213 	mov	dptr,#_dp_display_value_PARM_2
   0E2B E4                 3214 	clr	a
   0E2C F0                 3215 	movx	@dptr,a
   0E2D A3                 3216 	inc	dptr
   0E2E F0                 3217 	movx	@dptr,a
                           3218 ;	genCall
   0E2F 8A 82              3219 	mov	dpl,r2
   0E31 8B 83              3220 	mov	dph,r3
   0E33 8C F0              3221 	mov	b,r4
   0E35 ED                 3222 	mov	a,r5
   0E36 12s00r00           3223 	lcall	_dp_display_value
                    0E39   3224 	C$cli.c$288$2$4 ==.
                           3225 ;	../cli.c:288: dp_display_text("\t");
                           3226 ;	genCall
   0E39 75 82r2E           3227 	mov	dpl,#__str_11
   0E3C 75 83s00           3228 	mov	dph,#(__str_11 >> 8)
   0E3F 75 F0 80           3229 	mov	b,#0x80
   0E42 12s00r00           3230 	lcall	_dp_display_text
                    0E45   3231 	C$cli.c$290$2$4 ==.
                           3232 ;	../cli.c:290: for (m=1; m <=8 ;m++){
                           3233 ;	genAssign
   0E45 90s03rF0           3234 	mov	dptr,#_display_mem_data_m_1_1
   0E48 74 08              3235 	mov	a,#0x08
   0E4A F0                 3236 	movx	@dptr,a
   0E4B                    3237 00110$:
                    0E4B   3238 	C$cli.c$292$3$5 ==.
                           3239 ;	../cli.c:292: mem_data= HW_get_16bit_reg(tx_sub_address);
                           3240 ;	genAssign
   0E4B 90s03rEB           3241 	mov	dptr,#_display_mem_data_tx_sub_address_1_1
   0E4E E0                 3242 	movx	a,@dptr
   0E4F FA                 3243 	mov	r2,a
   0E50 A3                 3244 	inc	dptr
   0E51 E0                 3245 	movx	a,@dptr
   0E52 FB                 3246 	mov	r3,a
                           3247 ;	genCall
   0E53 8A 82              3248 	mov	dpl,r2
   0E55 8B 83              3249 	mov	dph,r3
   0E57 C0 02              3250 	push	ar2
   0E59 C0 03              3251 	push	ar3
   0E5B 12s00r00           3252 	lcall	_HW_get_16bit_reg
   0E5E AC 82              3253 	mov	r4,dpl
   0E60 AD 83              3254 	mov	r5,dph
   0E62 D0 03              3255 	pop	ar3
   0E64 D0 02              3256 	pop	ar2
                    0E66   3257 	C$cli.c$293$3$5 ==.
                           3258 ;	../cli.c:293: dp_display_value(mem_data,HEX);
                           3259 ;	genCast
   0E66 7E 00              3260 	mov	r6,#0x00
   0E68 7F 00              3261 	mov	r7,#0x00
                           3262 ;	genAssign
   0E6A 90s00r00           3263 	mov	dptr,#_dp_display_value_PARM_2
   0E6D E4                 3264 	clr	a
   0E6E F0                 3265 	movx	@dptr,a
   0E6F A3                 3266 	inc	dptr
   0E70 F0                 3267 	movx	@dptr,a
                           3268 ;	genCall
   0E71 8C 82              3269 	mov	dpl,r4
   0E73 8D 83              3270 	mov	dph,r5
   0E75 8E F0              3271 	mov	b,r6
   0E77 EF                 3272 	mov	a,r7
   0E78 C0 02              3273 	push	ar2
   0E7A C0 03              3274 	push	ar3
   0E7C 12s00r00           3275 	lcall	_dp_display_value
   0E7F D0 03              3276 	pop	ar3
   0E81 D0 02              3277 	pop	ar2
                    0E83   3278 	C$cli.c$294$3$5 ==.
                           3279 ;	../cli.c:294: dp_display_text("\t");
                           3280 ;	genCall
   0E83 75 82r2E           3281 	mov	dpl,#__str_11
   0E86 75 83s00           3282 	mov	dph,#(__str_11 >> 8)
   0E89 75 F0 80           3283 	mov	b,#0x80
   0E8C C0 02              3284 	push	ar2
   0E8E C0 03              3285 	push	ar3
   0E90 12s00r00           3286 	lcall	_dp_display_text
   0E93 D0 03              3287 	pop	ar3
   0E95 D0 02              3288 	pop	ar2
                    0E97   3289 	C$cli.c$295$3$5 ==.
                           3290 ;	../cli.c:295: tx_sub_address = tx_sub_address + 1;
                           3291 ;	genPlus
   0E97 90s03rEB           3292 	mov	dptr,#_display_mem_data_tx_sub_address_1_1
                           3293 ;	genPlusIncr
   0E9A 74 01              3294 	mov	a,#0x01
   0E9C 25 02              3295 	add	a,ar2
   0E9E F0                 3296 	movx	@dptr,a
   0E9F 74 00              3297 	mov	a,#0x00
   0EA1 35 03              3298 	addc	a,ar3
   0EA3 A3                 3299 	inc	dptr
   0EA4 F0                 3300 	movx	@dptr,a
                           3301 ;	genAssign
   0EA5 90s03rF0           3302 	mov	dptr,#_display_mem_data_m_1_1
   0EA8 E0                 3303 	movx	a,@dptr
   0EA9 FA                 3304 	mov	r2,a
                           3305 ;	genMinus
                           3306 ;	genMinusDec
   0EAA EA                 3307 	mov	a,r2
   0EAB 14                 3308 	dec	a
                           3309 ;	genAssign
   0EAC 90s03rF0           3310 	mov	dptr,#_display_mem_data_m_1_1
   0EAF F0                 3311 	movx	@dptr,a
                    0EB0   3312 	C$cli.c$290$3$5 ==.
                           3313 ;	../cli.c:290: for (m=1; m <=8 ;m++){
                           3314 ;	genAssign
   0EB0 90s03rF0           3315 	mov	dptr,#_display_mem_data_m_1_1
   0EB3 E0                 3316 	movx	a,@dptr
   0EB4 FA                 3317 	mov	r2,a
                           3318 ;	genIfx
   0EB5 EA                 3319 	mov	a,r2
                           3320 ;	genIfxJump
   0EB6 60 03              3321 	jz	00128$
   0EB8 02s0Er4B           3322 	ljmp	00110$
   0EBB                    3323 00128$:
                    0EBB   3324 	C$cli.c$283$1$1 ==.
                           3325 ;	../cli.c:283: for ( i=0; i <= 3 ;i++) {
                           3326 ;	genAssign
   0EBB 90s03rEF           3327 	mov	dptr,#_display_mem_data_i_1_1
   0EBE E0                 3328 	movx	a,@dptr
   0EBF FA                 3329 	mov	r2,a
                           3330 ;	genPlus
   0EC0 90s03rEF           3331 	mov	dptr,#_display_mem_data_i_1_1
                           3332 ;	genPlusIncr
   0EC3 EA                 3333 	mov	a,r2
   0EC4 04                 3334 	inc	a
   0EC5 F0                 3335 	movx	@dptr,a
   0EC6 02s0DrD9           3336 	ljmp	00111$
   0EC9                    3337 00115$:
                    0EC9   3338 	C$cli.c$300$1$1 ==.
                    0EC9   3339 	XG$display_mem_data$0$0 ==.
   0EC9 22                 3340 	ret
                           3341 ;------------------------------------------------------------
                           3342 ;Allocation info for local variables in function 'display_brt_sa'
                           3343 ;------------------------------------------------------------
                           3344 ;subaddr                   Allocated with name '_display_brt_sa_subaddr_1_1'
                           3345 ;------------------------------------------------------------
                    0ECA   3346 	G$display_brt_sa$0$0 ==.
                    0ECA   3347 	C$cli.c$304$1$1 ==.
                           3348 ;	../cli.c:304: void  display_brt_sa ( void) {
                           3349 ;	-----------------------------------------
                           3350 ;	 function display_brt_sa
                           3351 ;	-----------------------------------------
   0ECA                    3352 _display_brt_sa:
                    0ECA   3353 	C$cli.c$307$1$1 ==.
                           3354 ;	../cli.c:307: while (1) {
   0ECA                    3355 00106$:
                    0ECA   3356 	C$cli.c$308$2$2 ==.
                           3357 ;	../cli.c:308: dp_display_text("Sub Address #(1 to 31 ): ");
                           3358 ;	genCall
   0ECA 75 82rAF           3359 	mov	dpl,#__str_17
   0ECD 75 83s00           3360 	mov	dph,#(__str_17 >> 8)
   0ED0 75 F0 80           3361 	mov	b,#0x80
   0ED3 12s00r00           3362 	lcall	_dp_display_text
                    0ED6   3363 	C$cli.c$309$2$2 ==.
                           3364 ;	../cli.c:309: rx_char_ptr = rx_char;
                           3365 ;	genAssign
   0ED6 90s00r0B           3366 	mov	dptr,#_rx_char_ptr
   0ED9 74r01              3367 	mov	a,#_rx_char
   0EDB F0                 3368 	movx	@dptr,a
   0EDC A3                 3369 	inc	dptr
   0EDD 74s00              3370 	mov	a,#(_rx_char >> 8)
   0EDF F0                 3371 	movx	@dptr,a
   0EE0 A3                 3372 	inc	dptr
   0EE1 74 00              3373 	mov	a,#0x00
   0EE3 F0                 3374 	movx	@dptr,a
                    0EE4   3375 	C$cli.c$310$2$2 ==.
                           3376 ;	../cli.c:310: read_user_input(rx_char_ptr);
                           3377 ;	genCall
   0EE4 75 82r01           3378 	mov	dpl,#_rx_char
   0EE7 75 83s00           3379 	mov	dph,#(_rx_char >> 8)
   0EEA 75 F0 00           3380 	mov	b,#0x00
   0EED 12s06rCA           3381 	lcall	_read_user_input
                    0EF0   3382 	C$cli.c$311$2$2 ==.
                           3383 ;	../cli.c:311: xatoi ( &rx_char_ptr, &subaddr);
                           3384 ;	genCast
   0EF0 90s00r00           3385 	mov	dptr,#_xatoi_PARM_2
   0EF3 74rF1              3386 	mov	a,#_display_brt_sa_subaddr_1_1
   0EF5 F0                 3387 	movx	@dptr,a
   0EF6 A3                 3388 	inc	dptr
   0EF7 74s03              3389 	mov	a,#(_display_brt_sa_subaddr_1_1 >> 8)
   0EF9 F0                 3390 	movx	@dptr,a
   0EFA A3                 3391 	inc	dptr
   0EFB 74 00              3392 	mov	a,#0x0
   0EFD F0                 3393 	movx	@dptr,a
                           3394 ;	genCall
   0EFE 75 82r0B           3395 	mov	dpl,#_rx_char_ptr
   0F01 75 83s00           3396 	mov	dph,#(_rx_char_ptr >> 8)
   0F04 75 F0 00           3397 	mov	b,#0x00
   0F07 12s00r00           3398 	lcall	_xatoi
                    0F0A   3399 	C$cli.c$312$2$2 ==.
                           3400 ;	../cli.c:312: dp_display_text("\r\nInput recived :  ");
                           3401 ;	genCall
   0F0A 75 82rC9           3402 	mov	dpl,#__str_18
   0F0D 75 83s00           3403 	mov	dph,#(__str_18 >> 8)
   0F10 75 F0 80           3404 	mov	b,#0x80
   0F13 12s00r00           3405 	lcall	_dp_display_text
                    0F16   3406 	C$cli.c$313$2$2 ==.
                           3407 ;	../cli.c:313: dp_display_value(subaddr,HEX);
                           3408 ;	genAssign
   0F16 90s03rF1           3409 	mov	dptr,#_display_brt_sa_subaddr_1_1
   0F19 E0                 3410 	movx	a,@dptr
   0F1A FA                 3411 	mov	r2,a
                           3412 ;	genCast
   0F1B 7B 00              3413 	mov	r3,#0x00
   0F1D 7C 00              3414 	mov	r4,#0x00
   0F1F 7D 00              3415 	mov	r5,#0x00
                           3416 ;	genAssign
   0F21 90s00r00           3417 	mov	dptr,#_dp_display_value_PARM_2
   0F24 E4                 3418 	clr	a
   0F25 F0                 3419 	movx	@dptr,a
   0F26 A3                 3420 	inc	dptr
   0F27 F0                 3421 	movx	@dptr,a
                           3422 ;	genCall
   0F28 8A 82              3423 	mov	dpl,r2
   0F2A 8B 83              3424 	mov	dph,r3
   0F2C 8C F0              3425 	mov	b,r4
   0F2E ED                 3426 	mov	a,r5
   0F2F 12s00r00           3427 	lcall	_dp_display_value
                    0F32   3428 	C$cli.c$315$2$2 ==.
                           3429 ;	../cli.c:315: if ((subaddr > 0 ) && (subaddr < 32))
                           3430 ;	genAssign
   0F32 90s03rF1           3431 	mov	dptr,#_display_brt_sa_subaddr_1_1
   0F35 E0                 3432 	movx	a,@dptr
   0F36 FA                 3433 	mov	r2,a
                           3434 ;	genIfx
   0F37 EA                 3435 	mov	a,r2
                           3436 ;	genIfxJump
   0F38 70 03              3437 	jnz	00113$
   0F3A 02s0Fr5B           3438 	ljmp	00102$
   0F3D                    3439 00113$:
                           3440 ;	genCmpLt
                           3441 ;	genCmp
   0F3D BA 20 00           3442 	cjne	r2,#0x20,00114$
   0F40                    3443 00114$:
                           3444 ;	genIfxJump
   0F40 40 03              3445 	jc	00115$
   0F42 02s0Fr5B           3446 	ljmp	00102$
   0F45                    3447 00115$:
                    0F45   3448 	C$cli.c$318$3$3 ==.
                           3449 ;	../cli.c:318: display_brt_data(CORE1553BRT_0 ,subaddr);
                           3450 ;	genAssign
   0F45 90s03rDD           3451 	mov	dptr,#_display_brt_data_PARM_2
   0F48 EA                 3452 	mov	a,r2
   0F49 F0                 3453 	movx	@dptr,a
                           3454 ;	genCall
   0F4A 75 82 00           3455 	mov	dpl,#0x00
   0F4D 75 83 08           3456 	mov	dph,#0x08
   0F50 75 F0 00           3457 	mov	b,#0x00
   0F53 74 00              3458 	mov	a,#0x00
   0F55 12s08rCC           3459 	lcall	_display_brt_data
                    0F58   3460 	C$cli.c$320$3$3 ==.
                           3461 ;	../cli.c:320: break;
   0F58 02s0Fr6A           3462 	ljmp	00108$
   0F5B                    3463 00102$:
                    0F5B   3464 	C$cli.c$325$3$4 ==.
                           3465 ;	../cli.c:325: dp_display_text("\r\n\Invaid input !!!!! Enter the Sub Address # ( 1 to 31)to display Data: ");
                           3466 ;	genCall
   0F5B 75 82rDD           3467 	mov	dpl,#__str_19
   0F5E 75 83s00           3468 	mov	dph,#(__str_19 >> 8)
   0F61 75 F0 80           3469 	mov	b,#0x80
   0F64 12s00r00           3470 	lcall	_dp_display_text
   0F67 02s0ErCA           3471 	ljmp	00106$
   0F6A                    3472 00108$:
                    0F6A   3473 	C$cli.c$332$1$1 ==.
                    0F6A   3474 	XG$display_brt_sa$0$0 ==.
   0F6A 22                 3475 	ret
                           3476 	.area CSEG    (CODE)
                           3477 	.area CONST   (CODE)
                    0000   3478 F___cli$_str_8$0$0 == .
   0000                    3479 __str_8:
   0000 0D                 3480 	.db 0x0D
   0001 0A                 3481 	.db 0x0A
   0002 43 6F 72 65 31 35  3482 	.ascii "Core1553BRT>"
        35 33 42 52 54 3E
   000E 00                 3483 	.db 0x00
                    000F   3484 F___cli$_str_9$0$0 == .
   000F                    3485 __str_9:
   000F 0A                 3486 	.db 0x0A
   0010 0D                 3487 	.db 0x0D
   0011 20 42 52 54 20 52  3488 	.ascii " BRT Register Contents"
        65 67 69 73 74 65
        72 20 43 6F 6E 74
        65 6E 74 73
   0027 0D                 3489 	.db 0x0D
   0028 0A                 3490 	.db 0x0A
   0029 20                 3491 	.ascii " "
   002A 00                 3492 	.db 0x00
                    002B   3493 F___cli$_str_10$0$0 == .
   002B                    3494 __str_10:
   002B 0D                 3495 	.db 0x0D
   002C 0A                 3496 	.db 0x0A
   002D 00                 3497 	.db 0x00
                    002E   3498 F___cli$_str_11$0$0 == .
   002E                    3499 __str_11:
   002E 09                 3500 	.db 0x09
   002F 00                 3501 	.db 0x00
                    0030   3502 F___cli$_str_12$0$0 == .
   0030                    3503 __str_12:
   0030 0A                 3504 	.db 0x0A
   0031 0D                 3505 	.db 0x0D
   0032 20 42 52 54 20 53  3506 	.ascii " BRT SA"
        41
   0039 00                 3507 	.db 0x00
                    003A   3508 F___cli$_str_13$0$0 == .
   003A                    3509 __str_13:
   003A 20 20 20 52 58 20  3510 	.ascii "   RX Buffer"
        42 75 66 66 65 72
   0046 0D                 3511 	.db 0x0D
   0047 0A                 3512 	.db 0x0A
   0048 00                 3513 	.db 0x00
                    0049   3514 F___cli$_str_14$0$0 == .
   0049                    3515 __str_14:
   0049 20 20 54 58 20 42  3516 	.ascii "  TX Buffer"
        75 66 66 65 72
   0054 0D                 3517 	.db 0x0D
   0055 0A                 3518 	.db 0x0A
   0056 00                 3519 	.db 0x00
                    0057   3520 F___cli$_str_15$0$0 == .
   0057                    3521 __str_15:
   0057 0A                 3522 	.db 0x0A
   0058 0D                 3523 	.db 0x0D
   0059 20 4D 45 4D 4F 52  3524 	.ascii " MEMORY FiLLING WIETH FOLLOWING DATA "
        59 20 46 69 4C 4C
        49 4E 47 20 57 49
        45 54 48 20 46 4F
        4C 4C 4F 57 49 4E
        47 20 44 41 54 41
        20
   007E 00                 3525 	.db 0x00
                    007F   3526 F___cli$_str_16$0$0 == .
   007F                    3527 __str_16:
   007F 0A                 3528 	.db 0x0A
   0080 0D                 3529 	.db 0x0D
   0081 20 52 65 61 64 69  3530 	.ascii " Reading back the data from the same location"
        6E 67 20 62 61 63
        6B 20 74 68 65 20
        64 61 74 61 20 66
        72 6F 6D 20 74 68
        65 20 73 61 6D 65
        20 6C 6F 63 61 74
        69 6F 6E
   00AE 00                 3531 	.db 0x00
                    00AF   3532 F___cli$_str_17$0$0 == .
   00AF                    3533 __str_17:
   00AF 53 75 62 20 41 64  3534 	.ascii "Sub Address #(1 to 31 ): "
        64 72 65 73 73 20
        23 28 31 20 74 6F
        20 33 31 20 29 3A
        20
   00C8 00                 3535 	.db 0x00
                    00C9   3536 F___cli$_str_18$0$0 == .
   00C9                    3537 __str_18:
   00C9 0D                 3538 	.db 0x0D
   00CA 0A                 3539 	.db 0x0A
   00CB 49 6E 70 75 74 20  3540 	.ascii "Input recived :  "
        72 65 63 69 76 65
        64 20 3A 20 20
   00DC 00                 3541 	.db 0x00
                    00DD   3542 F___cli$_str_19$0$0 == .
   00DD                    3543 __str_19:
   00DD 0D                 3544 	.db 0x0D
   00DE 0A                 3545 	.db 0x0A
   00DF 49 6E 76 61 69 64  3546 	.ascii "Invaid input !!!!! Enter the Sub Address # ( 1 to 31)to di"
        20 69 6E 70 75 74
        20 21 21 21 21 21
        20 45 6E 74 65 72
        20 74 68 65 20 53
        75 62 20 41 64 64
        72 65 73 73 20 23
        20 28 20 31 20 74
        6F 20 33 31 29 74
        6F 20 64 69
   0119 73 70 6C 61 79 20  3547 	.ascii "splay Data: "
        44 61 74 61 3A 20
   0125 00                 3548 	.db 0x00
                           3549 	.area XINIT   (CODE)
                    0000   3550 F___cli$__xinit_user_input$0$0 == .
   0000                    3551 __xinit__user_input:
   0000 00 00 00 00        3552 	.byte #0x00,#0x00,#0x00,#0x00
                    0004   3553 F___cli$__xinit_last_rt_subaddress$0$0 == .
   0004                    3554 __xinit__last_rt_subaddress:
   0004 20                 3555 	.db #0x20
                           3556 	.area CABS    (ABS,CODE)
